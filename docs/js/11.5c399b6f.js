"use strict";(self["webpackChunkrock_sugar"]=self["webpackChunkrock_sugar"]||[]).push([[11],{5351:function(t,e,i){i.d(e,{Z:function(){return o}});var s=i(2482),r=i(2042);class o{constructor(t,e,i,r){(0,s.Z)(this,"left",0),(0,s.Z)(this,"right",0),(0,s.Z)(this,"top",0),(0,s.Z)(this,"bottom",0),this.left=t,this.right=e,this.top=i,this.bottom=r}X(){return this.left}Y(){return this.top}Height(){return this.bottom-this.top}Width(){return this.right-this.left}Left(){return this.left}Right(){return this.right}Top(){return this.top}Bottom(){return this.bottom}RectPoints(){return{leftTop:new r.Z(this.left,this.top),rightTop:new r.Z(this.right,this.top),leftBottom:new r.Z(this.left,this.bottom),rightBottom:new r.Z(this.right,this.bottom)}}Intersected(t){const e=t.left-this.left>0?t.left:this.left,i=t.right-this.right>0?this.right:t.right,s=t.top-this.top>0?t.top:this.top,r=t.bottom-this.bottom>0?this.bottom:t.bottom;return e>i||s>r?null:new o(e,i,s,r)}Scale(t){t<=0||(this.left*=t,this.right*=t,this.top*=t,this.bottom*=t)}}},7011:function(t,e,i){i.r(e),i.d(e,{default:function(){return f}});var s=i(3396);function r(t,e,i,r,o,a){const n=(0,s.up)("nano_cg_experiment_page");return(0,s.wg)(),(0,s.j4)(n,{prop_des_data:o.desData,prop_ui_setter:a.uiSetter,prop_section_params:o.sectionParams,ref:"page"},null,8,["prop_des_data","prop_ui_setter","prop_section_params"])}i(7658);var o=i(2812),a=i(5351);const n={category:"Experiment",name:"ViewTransform",buttonContent:"查看源码",title:"视角变换",content:"ViewTransform."};var c={name:"ViewTransform",data(){return{canvas:null,ctx:null,desData:n,sectionParams:{rects:[new a.Z(10,50,10,50),new a.Z(60,85,50,70),new a.Z(8,70,45,90)],winRectColor:"#ffffff",viewRectColor:"#000000",rectsClipColor:"#0bc6e3",rectsColor:"#ff0000",winRectOffset:{x:0,y:0},viewRectOffset:{x:0,y:0},showOriginRects:!0,debugContent:null,girdSize:3,screenTransform:{x:0,y:0,scale:100}}}},computed:{uiSetter(){let t=this.sectionParams,e=[{type:"color",id:"winRectColor",default:t.winRectColor,callback:o.Z.globalUiCallbacks.updateValue(this,"winRectColor")},{type:"color",id:"viewRectColor",default:t.viewRectColor,callback:o.Z.globalUiCallbacks.updateValue(this,"viewRectColor")},{type:"color",id:"rectsClipColor",default:t.rectsClipColor,callback:o.Z.globalUiCallbacks.updateValue(this,"rectsClipColor")},{type:"color",id:"rectsColor",default:t.rectsColor,callback:o.Z.globalUiCallbacks.updateValue(this,"rectsColor")},{type:"slider",id:"girdSize",value:t.girdSize,min:1,max:100,callback:o.Z.globalUiCallbacks.updateValue(this,"girdSize")},{type:"slider-vector",id:"winRectOffset",value:t.winRectOffset,min:{x:-100,y:-100},max:{x:500,y:500},callback:o.Z.globalUiCallbacks.updatePoint(this,"winRectOffset")},{type:"slider-vector",id:"viewRectOffset",value:t.viewRectOffset,min:{x:-100,y:-100},max:{x:500,y:500},callback:o.Z.globalUiCallbacks.updatePoint(this,"viewRectOffset")}];return e},winRect(){const{x:t,y:e}=this.sectionParams.winRectOffset;return new a.Z(5+t,100+t,5+e,100+e)},viewRect(){const{x:t,y:e}=this.sectionParams.viewRectOffset;return new a.Z(20+t,80+t,20+e,80+e)}},mounted(){this.Init(),this.SetUI()},methods:{Init(){this.$refs.page.Init(),this.canvas=this.$refs.page.getCanvas(),this.ctx=canvas.getContext("2d"),this.$refs.page.setViewer(this.sectionParams.screenTransform,this.Render),this.Render()},Render(){this.$refs.page.Render();const t=this.ctx,e=parseInt(this.canvas.width/this.sectionParams.girdSize)-1,i=parseInt(this.canvas.height/this.sectionParams.girdSize)-1;t.clearRect(0,0,this.canvas.width,this.canvas.height),this.sectionParams.girdSize+=this.$refs.page.girdSize,o.Z.drawGrid(this),this.sectionParams.girdSize<=0&&(this.sectionParams.girdSize=1),this.sectionParams.debugContent=[{title:"grid",content:"The number of cells in the x direction: "+e+"\nThe number of cells in the y direction: "+i}],this.sectionParams.showOriginRects&&this.sectionParams.rects.forEach((t=>{o.Z.drawRectInGrid(this,t,this.sectionParams.rectsColor)})),this.Clip().forEach((t=>{o.Z.drawRectInGrid(this,t,this.sectionParams.rectsClipColor)})),o.Z.drawRectInGrid(this,this.winRect,this.sectionParams.winRectColor),o.Z.drawRectInGrid(this,this.viewRect,this.sectionParams.viewRectColor)},Clip(){const t=[];return this.sectionParams.rects.forEach((e=>{const i=e.Intersected(this.winRect),s=e.Intersected(this.viewRect);if(!i||!s)return t;t.push(i.Intersected(s))})),t},SetUI(){this.$refs.page.SetUI()}}},l=i(89);const h=(0,l.Z)(c,[["render",r]]);var f=h}}]);
//# sourceMappingURL=11.5c399b6f.js.map