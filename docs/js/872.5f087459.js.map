{"version":3,"file":"js/872.5f087459.js","mappings":"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","sources":["webpack://rock-sugar/./src/pages/Games/VRAssignment/index.vue","webpack://rock-sugar/./src/pages/Games/VRAssignment/resource/vertex-shader.js","webpack://rock-sugar/./src/pages/Games/VRAssignment/resource/fragment-shader.js","webpack://rock-sugar/./src/pages/Games/VRAssignment/resource/scripts/VehicleController.js","webpack://rock-sugar/./src/pages/Games/VRAssignment/index.vue?dcf3"],"sourcesContent":["<template lang=\"html\">\r\n    <nano_game_assignment_page\r\n        :prop_des_data=\"desData\"\r\n        :prop_ui_setter=\"uiSetter\"\r\n        :prop_section_params=\"sectionParams\"\r\n        :prop_buttons_callback=\"sceneCallbacks\"\r\n        ref=\"page\"\r\n        @Init=\"Init\"\r\n        @Render=\"Render\"\r\n    />\r\n</template>\r\n<script>\r\n/*\r\n    author:haruluya.\r\n    date:2022/12/4.\r\n    des:只是一个vr选修课的大作业。\r\n        包括模型解析，场景渲染和简单屏幕后处理，摄像机和赛车控制器。\r\n*/\r\n\r\n\r\nimport vertexShaderSource from './resource/vertex-shader.js'\r\nimport fragmentShaderSource from './resource/fragment-shader.js'\r\nimport NanoObjParse from \"_pages/Webgl/HNWUEngine/ModelParse.js\"\r\nimport GeometryComponent from \"./resource/scripts/GeometryComponent.js\"\r\nimport back from './resource/images/cloud1/back.jpg'\r\nimport down from './resource/images/cloud1/down.jpg'\r\nimport front from './resource/images/cloud1/front.jpg'\r\nimport left from './resource/images/cloud1/left.jpg'\r\nimport right from './resource/images/cloud1/right.jpg'\r\nimport up from './resource/images/cloud1/up.jpg'\r\nimport VehicleController from './resource/scripts/VehicleController.js'\r\n\r\n\r\n//json data.\r\nlet sceneTransformFile = './sceneTransform1.json'\r\nlet sceneAnimsDataFile = './sceneAnimation.json'\r\n\r\nconst skyboxImgs = {\r\n    back,down,front,left,right,up\r\n}\r\n\r\n\r\nconst desData = {\r\n    category:\"Webgl\",\r\n    name:\"VRAssignment\",\r\n    buttonContent:\"查看源码\",\r\n    title:\"VRAssignment\",\r\n    content:\"just a assignment for vr course.\"\r\n}\r\n\r\nexport default {\r\n    name:'VRAssignment',\r\n    data() {\r\n        return {\r\n            gl: null,\r\n            canvas: null,\r\n            program: null,\r\n            vertexShaderSource,\r\n            fragmentShaderSource,\r\n            desData,\r\n            desData,\r\n            page:null,\r\n            uiSetter:[],\r\n            objectData:[],\r\n            objOffset:null,\r\n            carTransform:{\r\n                translation:[0, 0, 0],\r\n                rotation:[HNWUEngine.degToRad(180), HNWUEngine.degToRad(200), HNWUEngine.degToRad(0)],\r\n                scale:[1,1,1]\r\n            },\r\n            vehicleController:null,\r\n            cameraAnims:null,\r\n\r\n            sceneAnims:{\r\n                scene1ShowPlt:true,\r\n            },\r\n            sceneAnimsData:null,\r\n\r\n            currentScene:0\r\n        }\r\n    },\r\n\r\n    mounted(){           \r\n        this.getObjectData(['./models/vrAssignmentBeginScene/scene.obj'])\r\n    },\r\n    computed:{\r\n        sceneCallbacks(){\r\n            return {\r\n                carInfo:()=>{\r\n                    const camera = this.$refs.page.getCameraData();\r\n                    camera.position = [-19.667, 11.333, 11.119];\r\n                    camera.target = [-19.676, 11.2, 12.278];\r\n                    this.sceneAnims.scene1ShowPlt = false;\r\n                    this.$refs.page.showCarInfo = true;\r\n                    this.$refs.page.beginGameRender();\r\n                },\r\n                freePerspective:()=>{\r\n                    if(this.sceneAnims.scene1ShowPlt){\r\n                        this.sceneAnims.scene1ShowPlt = false;\r\n                        this.$refs.page.beginGameRender();\r\n                    }else{\r\n                        this.sceneAnims.scene1ShowPlt = true;\r\n                        this.$refs.page.beginGameRender();\r\n                    }\r\n                },\r\n                startRacing:()=>{\r\n                    this.$refs.page.showLoadingPage();\r\n                    this.objectData = [];\r\n                    this.currentScene = 1;\r\n                    this.$refs.page.clearComponents();\r\n                    this.sceneAnims.scene1ShowPlt = false;\r\n                    this.$refs.page.setCamera(\"vehicle\");\r\n                    const camera = this.$refs.page.getCameraData();\r\n                    camera.position = [-22, 11.8, 5.1];\r\n                    camera.target = [-19.676, 10.3, 12.278];\r\n                    this.vehicleController = new VehicleController(this.canvas,this.page.getCameraData());\r\n                    this.$refs.page.currentVehicleMode = 0;\r\n                    sceneTransformFile = \"./sceneTransform2.json\"\r\n                    this.getObjectData(['./models/runScene/car.obj','./models/runScene/scene2_road.obj']);\r\n                },\r\n                endRacing:()=>{\r\n                    this.$refs.page.showLoadingPage();\r\n                    this.objectData = [];\r\n                    this.currentScene = 0;\r\n                    this.$refs.page.clearComponents();\r\n                    this.sceneAnims.scene1ShowPlt = true;\r\n                    this.$refs.page.setCamera(\"viewer\");\r\n                    const camera = this.$refs.page.getCameraData();\r\n                    camera.position = [-19.667, 11.333, 11.119];\r\n                    camera.target = [-19.676, 11.2, 12.278];\r\n                    this.vehicleController = null;\r\n                    this.$refs.page.currentVehicleMode = -1;\r\n                    sceneTransformFile = \"./sceneTransform1.json\"\r\n                    this.getObjectData(['./models/vrAssignmentBeginScene/scene.obj'])\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        Init(){\r\n            this.page = this.$refs.page;\r\n            this.gl = this.page.getGL();\r\n            this.canvas = this.page.canvas;\r\n            if(this.objectData.length == 0){\r\n                return;\r\n            }\r\n\r\n        \r\n            //show scene ui.\r\n            this.page.loading = false;\r\n            this.$refs.page.showCarInfo = false;\r\n            if(this.currentScene == 0){\r\n                this.page.showScene1UI = true;\r\n                this.page.showScene2UI = false;\r\n            }else if(this.currentScene == 1){\r\n                this.page.showScene1UI = false;\r\n                this.page.showScene2UI = true;\r\n            }\r\n\r\n            this.page.addSkybox(skyboxImgs);\r\n            //screen effects.\r\n            {\r\n                this.page.addScreenSnowEffect();\r\n            }\r\n\r\n            //program.\r\n            const Objprogram = this.page.createProgram(vertexShaderSource,fragmentShaderSource);\r\n\r\n            this.page.setCamera(\"viewer\");\r\n\r\n            this.cameraAnims = this.page.createCameraAnims(this.sceneAnimsData);\r\n\r\n            this.objectData.forEach(model=>{\r\n                const gl = this.gl;\r\n                const modelData = model.obj;\r\n                const transform = model.transform;\r\n                const components = model.components;\r\n                const center = this.page.setObjectToScreenCenter(modelData.geometries);\r\n                modelData.geometries.forEach(({material,data,object})=>{\r\n                    const componentName = object+material;\r\n                    const geometryComponent = new GeometryComponent(gl,componentName,Objprogram);\r\n                    //handel normal.\r\n                    if (data.texcoord && data.normal) {\r\n                        data.tangent = NanoObjParse.generateTangents(data.position, data.texcoord);\r\n                        geometryComponent.addBuffer(\"tangent\",data.tangent);\r\n                    } else {\r\n                        geometryComponent.addBuffer(\"tangent\",{ value: [1, 0, 0] });\r\n                    }\r\n                    if (!data.texcoord) {\r\n                        data.texcoord = { value: [0, 0] };\r\n                    }\r\n                    if (!data.normal) {\r\n                        data.normal = { value: [0, 0, 1] };\r\n                    }\r\n                    //handle color.\r\n                    if (data.color) {\r\n                        if (data.position.length === data.color.length) {\r\n                            data.color = { numComponents: 3, data: data.color };\r\n                            geometryComponent.addBuffer(\"color\",data.color);\r\n                        }\r\n                    }else{\r\n                        geometryComponent.addBuffer(\"color\",{ value: [1, 1, 1, 1] });\r\n                    }\r\n                    geometryComponent.addBuffer(\"position\",{data:data.position});\r\n                    geometryComponent.addBuffer(\"texcoord\",{numComponents:2,data:data.texcoord});\r\n                    geometryComponent.addBuffer(\"normal\",{data:data.normal});\r\n                    geometryComponent.setMaterial({\r\n                        ...HNWUEngine.getDefaultMaterial(gl),\r\n                        ...model.materials[material]\r\n                    })\r\n                    geometryComponent.setTransform(transform);\r\n                    //camera.\r\n                    if (components.vehicleController){\r\n                        \r\n                        geometryComponent.setPosition(center)\r\n                        this.vehicleController.load(geometryComponent)\r\n                    }\r\n\r\n\r\n                    this.page.addGeometryComponent(geometryComponent);\r\n                })\r\n            })\r\n\r\n\r\n        },\r\n        Render(){\r\n            if(this.objectData.length == 0){\r\n                return;\r\n            }\r\n            const gl = this.gl;\r\n            gl.enable(gl.DEPTH_TEST);\r\n            gl.enable(gl.CULL_FACE);\r\n            gl.depthFunc(gl.LESS);\r\n\r\n\r\n \r\n            const viewMatrix = this.page.getViewMatrix();\r\n            const projectionMatrix = this.page.getProjectionMatrix();\r\n            const cameraPosition = this.page.getCameraData().position;\r\n\r\n            const sharedUniforms = {\r\n                \"u_view\": viewMatrix,\r\n                \"u_lightDirection\": HNWUEngine.normalize(this.page.lightDirection),\r\n                \"u_projection\": projectionMatrix,\r\n                \"u_viewWorldPosition\":cameraPosition,\r\n                \"u_lightIntensity\":this.page.lightIntensity.map(e=>{return e/255;}),\r\n            }\r\n            \r\n\r\n            this.page.setSharedUniforms(sharedUniforms);\r\n\r\n            //scene1showplt auto play.\r\n            if(this.sceneAnims.scene1ShowPlt){\r\n                if(this.cameraAnims.play(\"scene1ShowPlt\")){\r\n                    console.log(\"Scene1ShowPlt play over!\");\r\n                }\r\n            }\r\n            \r\n        },\r\n\r\n        async getObjectData(pathList){\r\n            //scene animation.\r\n            const sceneAnimsDataResponse =  await fetch(sceneAnimsDataFile);  \r\n            this.sceneAnimsData = JSON.parse(await sceneAnimsDataResponse.text());\r\n\r\n            //each component data.\r\n            for (let i = 0; i < pathList.length; i++){\r\n                //load objects.\r\n                const path = pathList[i];\r\n                let objLink = path;\r\n                const objResponse =  await fetch(objLink);  \r\n                const text = await objResponse.text();\r\n                const obj = NanoObjParse.objectParse(text);\r\n                const baseLink = new URL(objLink, window.location.href);\r\n                const matTexts = await Promise.all(obj.materialLibs.map(async filename => {\r\n                    const matHref = new URL(filename, baseLink).href;\r\n                    const matResponse = await fetch(matHref);\r\n                    return await matResponse.text();\r\n                }));\r\n                const materials = NanoObjParse.parseMTL(matTexts.join('\\n'));\r\n                const textures = {\r\n                    defaultWhite: NanoObjParse.create1PixelTexture(this.gl, [255, 255, 255, 255]),\r\n                };\r\n                // load texture for materials\r\n                for (const material of Object.values(materials)) {\r\n                    Object.entries(material)\r\n                    .filter(([key]) => key.endsWith('Map'))\r\n                    .forEach(([key, filename]) => {\r\n                        let texture = textures[filename];\r\n                        if (!texture) {\r\n                            const textureHref = new URL(filename, baseLink).href;\r\n                            texture = NanoObjParse.createTexture(this.gl, textureHref);\r\n                            textures[filename] = texture;\r\n                        }\r\n                        material[key] = texture;\r\n                    });\r\n                }\r\n\r\n                //load transform.\r\n                const transfromResponse =  await fetch(sceneTransformFile);  \r\n                const data = JSON.parse(await transfromResponse.text());\r\n                const transform = data[i].transform;\r\n                const components = data[i].components;\r\n                this.objectData.push({path,obj,materials,transform,components}) \r\n            }\r\n            this.$refs.page.Init();\r\n        },\r\n\r\n    }\r\n}\r\n</script>","export default\r\n`\r\nattribute vec4 a_position;\r\nattribute vec3 a_normal;\r\nattribute vec3 a_tangent;\r\nattribute vec2 a_texcoord;\r\nattribute vec4 a_color;\r\n\r\nuniform mat4 u_projection;\r\nuniform mat4 u_view;\r\nuniform mat4 u_world;\r\nuniform vec3 u_viewWorldPosition;\r\n\r\nvarying vec3 v_normal;\r\nvarying vec3 v_tangent;\r\nvarying vec3 v_surfaceToView;\r\nvarying vec2 v_texcoord;\r\nvarying vec4 v_color;\r\n\r\nvoid main() {\r\n  vec4 worldPosition = u_world * a_position;\r\n  gl_Position = u_projection * u_view * worldPosition;\r\n  v_surfaceToView = u_viewWorldPosition - worldPosition.xyz;\r\n  mat3 normalMat = mat3(u_world);\r\n  v_normal = normalize(normalMat * a_normal);\r\n  v_tangent = normalize(normalMat * a_tangent);\r\n\r\n  v_texcoord = a_texcoord;\r\n  v_color = a_color;\r\n}\r\n`","export default\r\n`\r\nprecision highp float;\r\n\r\nvarying vec3 v_normal;\r\nvarying vec3 v_tangent;\r\nvarying vec3 v_surfaceToView;\r\nvarying vec2 v_texcoord;\r\nvarying vec4 v_color;\r\n\r\nuniform vec3 diffuse;\r\nuniform sampler2D diffuseMap;\r\nuniform vec3 ambient;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform sampler2D specularMap;\r\nuniform float shininess;\r\nuniform sampler2D normalMap;\r\nuniform float opacity;\r\nuniform vec3 u_lightDirection;\r\nuniform vec3 u_ambientLight;\r\nuniform vec3 u_lightIntensity;\r\n\r\nvoid main () {\r\n  vec3 normal = normalize(v_normal) * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\r\n  vec3 tangent = normalize(v_tangent) * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\r\n  vec3 bitangent = normalize(cross(normal, tangent));\r\n\r\n  mat3 tbn = mat3(tangent, bitangent, normal);\r\n  normal = texture2D(normalMap, v_texcoord).rgb * 2. - 1.;\r\n  normal = normalize(tbn * normal);\r\n\r\n  vec3 surfaceToViewDirection = normalize(v_surfaceToView);\r\n  vec3 halfVector = normalize(u_lightDirection + surfaceToViewDirection);\r\n\r\n  float fakeLight = dot(u_lightDirection, normal) * .5 + .8;\r\n  float specularLight = clamp(dot(normal, halfVector), 0.0, 1.0);\r\n  vec4 specularMapColor = texture2D(specularMap, v_texcoord);\r\n  vec3 effectiveSpecular = specular * specularMapColor.rgb;\r\n\r\n  vec4 diffuseMapColor = texture2D(diffuseMap, v_texcoord);\r\n  vec3 effectiveDiffuse = diffuse * diffuseMapColor.rgb * v_color.rgb;\r\n  float effectiveOpacity = opacity * diffuseMapColor.a * v_color.a;\r\n\r\n  gl_FragColor = vec4(\r\n      emissive +\r\n      ambient * u_ambientLight +\r\n      effectiveDiffuse * fakeLight *u_lightIntensity+\r\n      effectiveSpecular * pow(specularLight, shininess),\r\n      1);\r\n}\r\n\r\n`","\r\nexport default class VehicleController{\r\n    yaw = 90;\r\n    pitch = 0;\r\n    speed = .03;\r\n    sensitivity = .1;\r\n    zoom = 45.0;\r\n    front = null;\r\n    right = null;\r\n    up = null;\r\n    worldUp = [0,1,0];\r\n    canvas = null;\r\n    camera = null;\r\n\r\n    constructor(canvas,camera){\r\n        this.canvas = canvas;\r\n        this.camera = camera;\r\n        if (!this.canvas || !this.camera){\r\n            throw new Error(\"vehicle controller init failed!\");\r\n        }\r\n        this.updateControllerVectors();\r\n    }\r\n\r\n\r\n    updateControllerVectors(){\r\n        let front = [0,0,0];\r\n        front[0] = Math.cos(HNWUEngine.degToRad(this.yaw)) * Math.cos(HNWUEngine.degToRad(0));\r\n        front[1] = Math.sin(HNWUEngine.degToRad(0));\r\n        front[2] = Math.sin(HNWUEngine.degToRad(this.yaw)) * Math.cos(HNWUEngine.degToRad(0));\r\n\r\n        this.front = HNWUEngine.normalize(front);\r\n        this.right = HNWUEngine.normalize(HNWUEngine.cross(this.front,this.worldUp));\r\n        this.up = HNWUEngine.normalize(HNWUEngine.cross(this.right,this.front));\r\n        this.camera.target =  HNWUEngine.subtractVectors(this.camera.position,HNWUEngine.scaleVector(\r\n            [Math.cos(HNWUEngine.degToRad(this.yaw)) * Math.cos(HNWUEngine.degToRad(this.pitch)),\r\n            Math.sin(HNWUEngine.degToRad(this.pitch)),\r\n            Math.sin(HNWUEngine.degToRad(this.yaw)) * Math.cos(HNWUEngine.degToRad(this.pitch))\r\n            ]\r\n            ,-1));\r\n        this.camera.target[1] -= .5\r\n    }   \r\n    load(component){\r\n        this.transform = component.transform;\r\n        this.canvas.onmouseenter = (ev)=>{\r\n            //key event.\r\n            document.addEventListener(\"keypress\",this.keyHandle.bind(this),false);\r\n            document.addEventListener(\"mousemove\",this.mouseHandle.bind(this),false);  \r\n        }\r\n    }\r\n    unload(){\r\n        //key event.\r\n        document.removeEventListener(\"keypress\",this.keyHandle.bind(this),false);\r\n        document.removeEventListener(\"mousemove\",this.mouseHandle.bind(this),false);  \r\n    }\r\n    keyHandle(keyEvent){\r\n        let velocity = this.speed * window.deltaTime;\r\n        if(keyEvent.key === \"w\"){\r\n\r\n            HNWUEngine.vec3add(this.transform.translation,HNWUEngine.vec3Multiply(this.front,velocity));\r\n            HNWUEngine.vec3add(this.camera.position,HNWUEngine.vec3Multiply(this.front,velocity));\r\n            \r\n        }\r\n        if(keyEvent.key === \"s\"){\r\n            HNWUEngine.vec3sub(this.transform.translation,HNWUEngine.vec3Multiply(this.front,velocity));\r\n            HNWUEngine.vec3sub(this.camera.position,HNWUEngine.vec3Multiply(this.front,velocity));\r\n        } \r\n        if(keyEvent.key === \"e\"){\r\n            this.transform.translation[1] += 2*velocity;\r\n            this.camera.position[1] += 2*velocity;\r\n        }\r\n        if(keyEvent.key === \"q\"){\r\n            this.transform.translation[1] -= 2*velocity;\r\n            this.camera.position[1] -= 2*velocity;\r\n        }\r\n        this.updateControllerVectors();\r\n    }\r\n    mouseHandle(mouseEvent){\r\n        this.yaw -= mouseEvent.movementX * this.sensitivity; \r\n        this.transform.rotation[1] += HNWUEngine.degToRad(mouseEvent.movementX * this.sensitivity);\r\n        this.pitch += mouseEvent.movementY * this.sensitivity;\r\n        \r\n        // if ( this.yaw > 110.0){\r\n        //     this.yaw = 110.0;\r\n        // }else if (this.yaw < 60){\r\n        //     this.yaw = 60.0;\r\n        // }else{\r\n           \r\n        // }\r\n        this.updateControllerVectors();\r\n    }\r\n    \r\n\r\n}","import { render } from \"./index.vue?vue&type=template&id=027c0e28&lang=html\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"F:\\\\Note-Haruluya\\\\Project\\\\Rock-sugar\\\\rock-sugar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_nano_game_assignment_page","prop_des_data","$data","prop_ui_setter","prop_section_params","_ctx","prop_buttons_callback","$options","ref","onInit","onRender","VehicleController","constructor","canvas","camera","this","Error","updateControllerVectors","front","Math","cos","HNWUEngine","degToRad","yaw","sin","normalize","right","cross","worldUp","up","target","subtractVectors","position","scaleVector","pitch","load","component","transform","onmouseenter","ev","document","addEventListener","keyHandle","bind","mouseHandle","unload","removeEventListener","keyEvent","velocity","speed","window","deltaTime","key","vec3add","translation","vec3Multiply","vec3sub","mouseEvent","movementX","sensitivity","rotation","movementY","sceneTransformFile","sceneAnimsDataFile","skyboxImgs","back","down","left","desData","category","name","buttonContent","title","content","data","gl","program","vertexShaderSource","fragmentShaderSource","page","uiSetter","objectData","objOffset","carTransform","scale","vehicleController","cameraAnims","sceneAnims","scene1ShowPlt","sceneAnimsData","currentScene","mounted","getObjectData","computed","sceneCallbacks","carInfo","$refs","getCameraData","showCarInfo","beginGameRender","freePerspective","startRacing","showLoadingPage","clearComponents","setCamera","currentVehicleMode","endRacing","methods","Init","getGL","length","loading","showScene1UI","showScene2UI","addSkybox","addScreenSnowEffect","Objprogram","createProgram","createCameraAnims","forEach","model","modelData","obj","components","center","setObjectToScreenCenter","geometries","material","object","componentName","geometryComponent","GeometryComponent","texcoord","normal","tangent","NanoObjParse","addBuffer","value","color","numComponents","setMaterial","getDefaultMaterial","materials","setTransform","setPosition","addGeometryComponent","Render","enable","DEPTH_TEST","CULL_FACE","depthFunc","LESS","viewMatrix","getViewMatrix","projectionMatrix","getProjectionMatrix","cameraPosition","sharedUniforms","lightDirection","lightIntensity","map","e","setSharedUniforms","play","console","log","async","pathList","sceneAnimsDataResponse","fetch","JSON","parse","text","i","path","objLink","objResponse","baseLink","URL","location","href","matTexts","Promise","all","materialLibs","matHref","filename","matResponse","join","textures","defaultWhite","Object","values","entries","filter","endsWith","texture","textureHref","transfromResponse","push","__exports__","render"],"sourceRoot":""}