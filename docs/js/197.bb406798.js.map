{"version":3,"file":"js/197.bb406798.js","mappings":"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","sources":["webpack://rock-sugar/./src/pages/CG/Experiment/DAA/index.vue","webpack://rock-sugar/./src/pages/CG/Experiment/DAA/index.vue?bc65"],"sourcesContent":["<template lang=\"html\">\r\n    <nano_cg_experiment_page\r\n        :prop_des_data=\"desData\"\r\n        :prop_ui_setter=\"uiSetter\"\r\n        :prop_section_params=\"sectionParams\"\r\n        ref=\"page\"\r\n    />\r\n</template>\r\n<script>\r\n\r\nimport uiSetting from \"../ui-setting\"\r\n\r\nconst desData = {\r\n    category:\"Experiment\",\r\n    name:\"DAA\",\r\n    buttonContent:\"查看源码\",\r\n    title:\"DAA画线\",\r\n    content:\"Digital Differential Analyzer.\"\r\n}\r\n/*\r\n    @author:haruluya\r\n    @des: Ex02 daa.\r\n*/\r\n\r\nexport default {\r\n    name: \"DAA\",\r\n    data() {\r\n        return {\r\n            canvas: null,\r\n            ctx: null,\r\n            // component data.\r\n            desData,\r\n            // params of page.\r\n            sectionParams: {\r\n                beginPoint: { x: 1, y: 1 },\r\n                endPoint: { x: 100, y: 20 },\r\n                color: \"#0bc6e3\",\r\n                girdSize: 10,\r\n                debugContent:null,\r\n                screenTransform:{x:0,y:0,scale:100},\r\n            }\r\n        };\r\n    },\r\n    computed: {\r\n        //uiSetter.\r\n        uiSetter() {\r\n            let sectionParams = this.sectionParams;\r\n            return [\r\n                { type: \"slider-vector\", id: \"beginPoint\", value: sectionParams.beginPoint, min: { x: 0, y: 0 }, max: { x: 500, y: 500 }, callback: uiSetting.globalUiCallbacks.updatePoint(this, \"beginPoint\") },\r\n                { type: \"slider-vector\", id: \"endPoint\", value: sectionParams.endPoint, min: { x: 0, y: 0 }, max: { x: 500, y: 500 }, callback: uiSetting.globalUiCallbacks.updatePoint(this, \"endPoint\") },\r\n                { type: \"slider\", id: \"girdSize\", value: sectionParams.girdSize, min: 1, max: 100, callback: uiSetting.globalUiCallbacks.updateValue(this, \"girdSize\")},\r\n                { type: \"color\",id: \"color\",default: sectionParams.color, callback: uiSetting.globalUiCallbacks.updateValue(this, \"color\")}\r\n            ];\r\n        },\r\n    },\r\n    methods: {\r\n        Init() {\r\n            this.$refs.page.Init();\r\n\r\n            this.canvas = this.$refs.page.getCanvas();\r\n            this.ctx = canvas.getContext(\"2d\");\r\n            this.$refs.page.setViewer(this.sectionParams.screenTransform,this.Render);\r\n\r\n            this.Render();\r\n        },\r\n        Render() {\r\n            this.$refs.page.Render();\r\n\r\n            const ctx = this.ctx;\r\n            const sectionParams = this.sectionParams;\r\n            const gridx = parseInt(this.canvas.width / this.sectionParams.girdSize) - 1;\r\n            const gridy = parseInt(this.canvas.height / this.sectionParams.girdSize) - 1;\r\n            \r\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.sectionParams.girdSize += this.$refs.page.girdSize;\r\n\r\n            uiSetting.drawGrid(this);\r\n            if(this.sectionParams.girdSize  <= 0) {\r\n                    this.sectionParams.girdSize = 1\r\n            }\r\n            this.sectionParams.debugContent = [{\r\n                    title: \"grid\",\r\n                    content: \"The number of cells in the x direction: \" + gridx + \"\\nThe number of cells in the y direction: \" + gridy,\r\n                }];\r\n                \r\n            ctx.fillStyle = sectionParams.color;\r\n\r\n\r\n            let beginPoint = sectionParams.beginPoint;\r\n            let endPoint = sectionParams.endPoint;\r\n            //DAA.\r\n            let temp = null;\r\n            let m, tx, ty, x, y = 0;\r\n            //Horizontal line.\r\n            if (beginPoint.y === endPoint.y) {\r\n                if (beginPoint.x > endPoint.x) {\r\n                    temp = beginPoint;\r\n                    beginPoint = endPoint;\r\n                    endPoint = temp;\r\n                }\r\n                for (let gridx = beginPoint.x; gridx < endPoint.x; gridx++)\r\n                    uiSetting.drawPointInGrid(this, gridx, beginPoint.y,sectionParams.color);\r\n            }\r\n            //Vertical line.\r\n            else if (beginPoint.x === endPoint.x) {\r\n                if (beginPoint.y > endPoint.y) {\r\n                    temp = beginPoint;\r\n                    beginPoint = endPoint;\r\n                    endPoint = temp;\r\n                }\r\n                for (let gridy = beginPoint.y; gridy < endPoint.y; gridy++)\r\n                    uiSetting.drawPointInGrid(this, beginPoint.x, gridy,sectionParams.color);\r\n            }\r\n            else {\r\n                m = (endPoint.y - beginPoint.y) / (endPoint.x - beginPoint.x);\r\n                // -45 < K < 45.\r\n                if (m > -1 && m < 1) {\r\n                    if (beginPoint.x > endPoint.x) {\r\n                        temp = beginPoint;\r\n                        beginPoint = endPoint;\r\n                        endPoint = temp;\r\n                    }\r\n                    ty = beginPoint.y;\r\n                    for (x = beginPoint.x; x < endPoint.x; x++) {\r\n                        y = parseInt(ty + 0.5);\r\n                        uiSetting.drawPointInGrid(this, x, y,sectionParams.color);\r\n                        ty += m;\r\n                    }\r\n                }\r\n                // k > 45.\r\n                else {\r\n                    if (beginPoint.y > endPoint.y) {\r\n                        temp = beginPoint;\r\n                        beginPoint = endPoint;\r\n                        endPoint = temp;\r\n                    }\r\n                    tx = beginPoint.x;\r\n                    for (y = beginPoint.y; y < endPoint.y; y++) {\r\n                        x = parseInt(tx + 0.5);\r\n                        uiSetting.drawPointInGrid(this, x, y,sectionParams.color);\r\n                        tx += 1 / m;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        SetUI() {\r\n            this.$refs.page.SetUI();\r\n        },\r\n    },\r\n    mounted() {\r\n        this.Init();\r\n        this.SetUI();\r\n    },\r\n};\r\n</script>\r\n","import { render } from \"./index.vue?vue&type=template&id=2f911a34&lang=html\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"F:\\\\Note-Haruluya\\\\Project\\\\Rock-sugar\\\\rock-sugar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_nano_cg_experiment_page","prop_des_data","$data","prop_ui_setter","$options","prop_section_params","ref","desData","category","name","buttonContent","title","content","data","canvas","ctx","sectionParams","beginPoint","x","y","endPoint","color","girdSize","debugContent","screenTransform","scale","computed","uiSetter","this","type","id","value","min","max","callback","uiSetting","default","methods","Init","$refs","page","getCanvas","getContext","setViewer","Render","gridx","parseInt","width","gridy","height","clearRect","fillStyle","m","tx","ty","temp","SetUI","mounted","__exports__","render"],"sourceRoot":""}