"use strict";(self["webpackChunkrock_sugar"]=self["webpackChunkrock_sugar"]||[]).push([[208],{4483:function(t,i){class e{constructor(t){this.points=t,this.points.forEach(((t,i)=>{this[i]=t}))}maxPointX(){let t=0;return this.points.forEach((i=>{t=t>i.x?t:i.x})),t}minPointX(){let t=this.maxPointX();return this.points.forEach((i=>{t=t<i.x?t:i.x})),t}maxPointY(){let t=0;return this.points.forEach((i=>{t=t>i.y?t:i.y})),t}minPointY(){let t=this.maxPointX();return this.points.forEach((i=>{t=t<i.y?t:i.y})),t}size(){return this.points.length}indexValue(t){return this.points[t]}isInPolygon(t){let i,e,s=!1;for(i=0,e=this.size()-1;i<this.size();e=i++)this.points[i].y>t.y!=this.points[e].y>t.y&&t.x<(this.points[e].x-this.points[i].x)*(t.y-this.points[i].y)/(this.points[e].y-this.points[i].y)+this.points[i].x&&(s=!s);return s}}i["Z"]=e},2208:function(t,i,e){e.r(i),e.d(i,{default:function(){return p}});var s=e(3396);function n(t,i,e,n,r,a){const o=(0,s.up)("nano_cg_experiment_page");return(0,s.wg)(),(0,s.j4)(o,{prop_des_data:r.desData,prop_ui_setter:a.uiSetter,prop_section_params:r.sectionParams,ref:"page"},null,8,["prop_des_data","prop_ui_setter","prop_section_params"])}e(7658);var r=e(2812),a=e(4483);const o={category:"Experiment",name:"EdgeTablePolygonFlag",buttonContent:"查看源码",title:"边标志填充算法",content:"Edge table polygon Flag."};var c={name:"EdgeTablePolygon",data(){return{canvas:null,ctx:null,desData:o,sectionParams:{points:[{x:20,y:20},{x:20,y:70},{x:50,y:50},{x:110,y:60},{x:110,y:30},{x:50,y:10}],color:"#0bc6e3",debugContent:null,girdSize:3,screenTransform:{x:0,y:0,scale:100}}}},computed:{uiSetter(){let t=this.sectionParams,i=[{type:"slider",id:"girdSize",value:t.girdSize,min:1,max:100,callback:r.Z.globalUiCallbacks.updateValue(this,"girdSize")},{type:"color",id:"color",default:t.color,callback:r.Z.globalUiCallbacks.updateValue(this,"color")}];for(let e=0;e<this.sectionParams.points.length;e++)i.push({type:"slider-vector",id:"point"+e,value:t.points[e],min:{x:0,y:0},max:{x:500,y:500},callback:r.Z.globalUiCallbacks.updatePointArray(this,"points",e)});return i}},methods:{Init(){this.$refs.page.Init(),this.canvas=this.$refs.page.getCanvas(),this.ctx=canvas.getContext("2d"),this.$refs.page.setViewer(this.sectionParams.screenTransform,this.Render),this.Render()},Render(){this.$refs.page.Render();const t=this.ctx,i=parseInt(this.canvas.width/this.sectionParams.girdSize)-1,e=parseInt(this.canvas.height/this.sectionParams.girdSize)-1;t.clearRect(0,0,this.canvas.width,this.canvas.height),this.sectionParams.girdSize+=this.$refs.page.girdSize,r.Z.drawGrid(this),this.sectionParams.girdSize<=0&&(this.sectionParams.girdSize=1),this.sectionParams.debugContent=[{title:"grid",content:"The number of cells in the x direction: "+i+"\nThe number of cells in the y direction: "+e}];const s=new a.Z(this.sectionParams.points);if(s.size()<3)return;let n,o,c,h;n=s.minPointX(),o=s.maxPointX(),c=s.minPointY(),h=s.maxPointY();let l,p,d,u,g,m,y,f,x,P=h-c,b=o-n,_=[];for(l=0;l<P;l++)for(p=0;p<b;p++)_[l*b+p]=!1;let v=s.size();for(x=0;x<v;x++)if(x==v-1?(d=s[x],u=s[0]):(d=s[x],u=s[x+1]),d.y>u.y&&(g=d,d=u,u=g),d.y!=u.y)for(m=(u.x-d.x)/(u.y-d.y),f=d.x,y=f,l=d.y;l<u.y;l++){for(f=Math.floor(y),p=f;p<o;p++)_[(l-c)*b+p-n]=!_[(l-c)*b+p-n];y+=m}for(l=0;l<P;l++)for(p=0;p<b;p++)_[l*b+p]&&r.Z.drawPointInGrid(this,p+n,l+c,this.sectionParams.color)},SetUI(){this.$refs.page.SetUI()}},mounted(){this.Init(),this.SetUI()}},h=e(89);const l=(0,h.Z)(c,[["render",n]]);var p=l}}]);
//# sourceMappingURL=208.83ed92d8.js.map