{"version":3,"file":"js/106.90014e45.js","mappings":"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","sources":["webpack://rock-sugar/./src/pages/CG/Experiment/Interfaces/Polygon.js","webpack://rock-sugar/./src/pages/CG/Experiment/Interfaces/Rect.js","webpack://rock-sugar/./src/pages/CG/Experiment/ClipPolygon/index.vue","webpack://rock-sugar/./src/pages/CG/Experiment/ClipPolygon/index.vue?69c1"],"sourcesContent":["/*\r\n    @author:haruluya\r\n    @des:The obstraction of polygon\r\n    @params:{\r\n        points:the points of polygon.\r\n    }\r\n*/\r\nclass Polygon{\r\n    constructor(points){\r\n        this.points = points\r\n        this.points.forEach((e,i)=>{\r\n            this[i] = e;\r\n        })\r\n    }\r\n    maxPointX(){\r\n        let max = 0;\r\n        this.points.forEach(element => {\r\n            max = max > element.x ? max : element.x;\r\n        });\r\n        return max;\r\n    }\r\n    minPointX(){\r\n        let min = this.maxPointX();\r\n        this.points.forEach(element =>{\r\n            min = min < element.x ? min : element.x;\r\n        })\r\n        return min;\r\n    }\r\n    maxPointY(){\r\n        let max = 0;\r\n        this.points.forEach(element => {\r\n            max = max > element.y ? max : element.y;\r\n        });\r\n        return max;\r\n    }\r\n    minPointY(){\r\n        let min = this.maxPointX();\r\n        this.points.forEach(element =>{\r\n            min = min < element.y ? min : element.y;\r\n        })\r\n        return min;\r\n    }\r\n    size(){\r\n        return this.points.length;\r\n    }\r\n    indexValue(index){\r\n        return this.points[index];\r\n    }\r\n    isInPolygon(point){\r\n        let i, j;\r\n        let c = false;\r\n        for (i=0, j=this.size()-1; i<this.size(); j=i++)\r\n        {\r\n            if(((this.points[i].y>point.y) != (this.points[j].y>point.y)) &&\r\n                (point.x<(this.points[j].x-this.points[i].x) *\r\n                (point.y-this.points[i].y) / (this.points[j].y-this.points[i].y) + this.points[i].x))\r\n            c = !c;\r\n        }\r\n        return c;\r\n    }\r\n}\r\nexport default Polygon;","import Point from \"./Point\";\r\n\r\nexport default class Rect{\r\n    left = 0;\r\n    right = 0;\r\n    top = 0;\r\n    bottom = 0;\r\n    constructor(left,right,top,bottom){\r\n        this.left = left;\r\n        this.right = right;\r\n        this.top = top;\r\n        this.bottom = bottom;\r\n    }\r\n    X(){\r\n        return this.left;\r\n    }\r\n    Y(){\r\n        return this.top;\r\n    }\r\n    Height(){\r\n        return this.bottom - this.top;\r\n\r\n    }\r\n    Width(){\r\n        return this.right - this.left;\r\n    }\r\n    Left(){\r\n        return this.left;\r\n    }\r\n    Right(){\r\n        return this.right;\r\n    }\r\n    Top(){\r\n        return this.top;\r\n    }\r\n    Bottom(){\r\n        return this.bottom;\r\n    }\r\n    RectPoints(){\r\n        return {\r\n            leftTop:new Point(this.left,this.top),\r\n            rightTop:new Point(this.right,this.top),\r\n            leftBottom:new Point(this.left,this.bottom),\r\n            rightBottom:new Point(this.right,this.bottom),\r\n        }\r\n    }\r\n    Intersected(rect){\r\n        const left = rect.left - this.left > 0 ?rect.left :this.left;\r\n        const right = rect.right - this.right > 0 ?this.right :rect.right;\r\n        const top = rect.top - this.top > 0 ? rect.top :this.top;\r\n        const bottom = rect.bottom - this.bottom > 0 ?this.bottom :rect.bottom;\r\n        \r\n        if(left > right || top > bottom){\r\n            return null;\r\n        }\r\n\r\n        return new Rect(left,right,top,bottom);\r\n    }\r\n    Scale(scale){\r\n        if(scale <= 0) return;\r\n        this.left *= scale;this.right *= scale;this.top *= scale;this.bottom *= scale;\r\n    }\r\n\r\n}","<template lang=\"html\">\r\n    <nano_cg_experiment_page :prop_des_data=\"desData\" :prop_ui_setter=\"uiSetter\" :prop_section_params=\"sectionParams\"\r\n        ref=\"page\" />\r\n</template>\r\n<script>\r\n\r\nimport uiSetting from \"../ui-setting\"\r\nimport { Point,Polygon,Rect} from \"../Interfaces\"\r\nconst desData = {\r\n    category: \"Experiment\",\r\n    name: \"ClipPolygon\",\r\n    buttonContent: \"查看源码\",\r\n    title: \"多边形裁剪\",\r\n    content: \"clip polygon.\"\r\n}\r\n\r\n\r\n\r\n/*\r\n    @author:haruluya\r\n    @des: Ex11 ClipPolygon.\r\n*/\r\n\r\nexport default {\r\n    name: \"ClipPolygon\",\r\n    data() {\r\n        return {\r\n            canvas: null,\r\n            ctx: null,\r\n            // component data.\r\n            desData,\r\n            // params of page.\r\n            sectionParams: {\r\n                points: [{ x: 0, y: 100 }, { x: 100, y: 10 }, { x: 190, y: 100 }, { x: 100, y: 50 }],\r\n                clipRect:new Rect(20,100,20,100),\r\n                innerColor:'#0bc6e3',\r\n                outerColor:'#ffffff',\r\n                clipColor:'#000000',\r\n                debugContent: null,\r\n                girdSize: 3,\r\n                screenTransform:{x:0,y:0,scale:100}\r\n            }\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        //uiSetter.\r\n        uiSetter() {\r\n            let sectionParams = this.sectionParams;\r\n            let setter = [\r\n                {\r\n                    type: \"slider\", id: \"girdSize\", value: sectionParams.girdSize, min: 1, max: 100,\r\n                    callback: uiSetting.globalUiCallbacks.updateValue(this, \"girdSize\")\r\n                },\r\n                { type: \"color\",id: \"innerColor\",default: sectionParams.innerColor, callback: uiSetting.globalUiCallbacks.updateValue(this, \"innerColor\")},\r\n                { type: \"color\",id: \"outerColor\",default: sectionParams.outerColor, callback: uiSetting.globalUiCallbacks.updateValue(this, \"outerColor\")},\r\n                { type: \"color\",id: \"clipColor\",default: sectionParams.clipColor, callback: uiSetting.globalUiCallbacks.updateValue(this, \"clipColor\")},\r\n            ];\r\n            for (let i= 0; i < this.sectionParams.points.length; i++){\r\n                setter.push(\r\n                 { type: \"slider-vector\", id: \"point\"+i , value: sectionParams.points[i], min: { x: 0, y: 0 }, max: { x: 500, y: 500 }, callback: uiSetting.globalUiCallbacks.updatePointArray(this, \"points\", i) },\r\n                )\r\n            }\r\n            return setter;\r\n        },\r\n\r\n    },\r\n    methods: {\r\n        Init() {\r\n            this.$refs.page.Init();\r\n\r\n            this.canvas = this.$refs.page.getCanvas();\r\n            this.ctx = canvas.getContext('2d');\r\n            this.$refs.page.setViewer(this.sectionParams.screenTransform,this.Render);\r\n\r\n            this.Render();\r\n        },\r\n        Render() {\r\n            this.$refs.page.Render();\r\n\r\n            const ctx = this.ctx;\r\n            const gridx = parseInt(this.canvas.width / this.sectionParams.girdSize) - 1;\r\n            const gridy = parseInt(this.canvas.height / this.sectionParams.girdSize) - 1;\r\n\r\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n            this.sectionParams.girdSize += this.$refs.page.girdSize;\r\n            uiSetting.drawGrid(this);\r\n            \r\n            if(this.sectionParams.girdSize  <= 0) {\r\n                    this.sectionParams.girdSize = 1\r\n            }\r\n\r\n            this.sectionParams.debugContent = [{\r\n                title: \"grid\", content: \"The number of cells in the x direction: \" + gridx + \"\\nThe number of cells in the y direction: \" + gridy,\r\n            }];\r\n          \r\n\r\n            // clip polygon.\r\n            //draw clip frame.\r\n            const clipRect = this.sectionParams.clipRect;\r\n            uiSetting.drawRectInGrid(this,clipRect,this.sectionParams.clipColor);\r\n            uiSetting.drawPolygonInGrid(this,new Polygon(this.sectionParams.points),this.sectionParams.outerColor);\r\n            const innerPoly = this.polyClip(new Polygon(this.sectionParams.points),this.sectionParams.clipRect);\r\n            if (innerPoly.size() < 3){\r\n                return;\r\n            }\r\n            uiSetting.drawPolygonInGrid(this,innerPoly,this.sectionParams.innerColor); \r\n       \r\n        },\r\n        polyClip(poly1,rect1){\r\n            let x0, y0, x1, y1;\r\n            let py0, py1, py2, py3;\r\n            //裁剪左边\r\n            x0 = rect1.X();\r\n            y0 = rect1.Y()+rect1.Height();\r\n            x1 = rect1.X();\r\n            y1 = rect1.Y();\r\n            py0 = this.edgeClip(poly1, new Point(x0,y0), new Point(x1,y1));\r\n\r\n            //裁剪下边\r\n            x0 = rect1.X()+rect1.Width();\r\n            y0 = rect1.Y()+rect1.Height();\r\n            x1 = rect1.X();\r\n            y1 = rect1.Y()+rect1.Height();\r\n            py1 = this.edgeClip(py0, new Point(x0,y0), new Point(x1,y1));\r\n            //裁剪右边\r\n            x0 = rect1.X()+rect1.Width();\r\n            y0 = rect1.Y();\r\n            x1 = rect1.X()+rect1.Width();\r\n            y1 = rect1.Y()+rect1.Height();\r\n            py2 = this.edgeClip(py1, new Point(x0,y0), new Point(x1,y1));\r\n            //裁剪上边\r\n            x0 = rect1.X();\r\n            y0 = rect1.Y();\r\n            x1 = rect1.X()+rect1.Width();\r\n            y1 = rect1.Y();\r\n            py3 = this.edgeClip(py2, new Point(x0,y0), new Point(x1,y1));\r\n            return py3;\r\n        },\r\n        edgeClip(poly1,p0,p1){\r\n            let v = [];\r\n            let i;\r\n            let m = poly1.size();\r\n            let s, p;\r\n            let pt;\r\n            s = poly1.indexValue(m-1);\r\n            for(i=0; i<m; i++)\r\n            {\r\n                p = poly1.indexValue(i);\r\n                if(this.isInsideEdge(p,p0,p1))//点p在边(p0,p1)的内侧\r\n                {\r\n                    if(this.isInsideEdge(s,p0,p1))//情况1\r\n                        v.push(p);\r\n                    else//情况4\r\n                    {\r\n                        pt = this.intersect(s,p,p0,p1);\r\n                        v.push(pt);\r\n                        v.push(p);\r\n                    }\r\n                }\r\n                else if(this.isInsideEdge(s,p0,p1)){//情况2\r\n                        pt = this.intersect(s,p,p0,p1);\r\n                        v.push(pt);\r\n                }//情况3没有输出\r\n                s=p;\r\n            }\r\n            return new Polygon(v);\r\n        },\r\n        isInsideEdge(p,p0,p1){\r\n            if(p0.x>p1.x)//裁剪边为窗口的下边\r\n            {\r\n                if(p.y<=p0.y)\r\n                    return true;\r\n            }\r\n            else if(p0.x<p1.x)//裁剪边为窗口的上边\r\n            {\r\n                if(p.y>=p0.y)\r\n                    return true;\r\n            }\r\n            else if(p0.y<p1.y)//裁减边为窗口的右边\r\n            {\r\n                if(p.x<=p0.x)\r\n                    return true;\r\n            }\r\n            else if(p0.y>p1.y)//裁减边为窗口的左边\r\n            {\r\n                if(p.x>=p0.x)\r\n                    return true;\r\n            }\r\n            return false;\r\n        },\r\n        intersect(s,p,p0,p1){\r\n            let m;\r\n            let x,y;\r\n            if(p0.y==p1.y)//水平裁剪边\r\n            {\r\n                m=(p.x-s.x)/(p.y-s.y);\r\n                x=s.x+Math.floor((p0.y-s.y)*m);\r\n                y=p0.y;\r\n            }\r\n            else//竖直裁剪边\r\n            {\r\n                m=(p.y-s.y)/(p.x-s.x);\r\n                x = p0.x;\r\n                y=s.y+Math.floor((p0.x-s.x)*m);\r\n            }\r\n            return new Point(x,y);\r\n        },\r\n        SetUI() {\r\n            this.$refs.page.SetUI();\r\n        },\r\n\r\n\r\n    },\r\n    mounted() {\r\n        this.Init();\r\n        this.SetUI();\r\n    },\r\n\r\n};\r\n\r\n</script>\r\n","import { render } from \"./index.vue?vue&type=template&id=3d2f645e&lang=html\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"F:\\\\Note-Haruluya\\\\Project\\\\Rock-sugar\\\\rock-sugar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["Polygon","constructor","points","this","forEach","e","i","maxPointX","max","element","x","minPointX","min","maxPointY","y","minPointY","size","length","indexValue","index","isInPolygon","point","j","c","Rect","left","right","top","bottom","X","Y","Height","Width","Left","Right","Top","Bottom","RectPoints","leftTop","Point","rightTop","leftBottom","rightBottom","Intersected","rect","Scale","scale","_createBlock","_component_nano_cg_experiment_page","prop_des_data","$data","prop_ui_setter","$options","prop_section_params","ref","desData","category","name","buttonContent","title","content","data","canvas","ctx","sectionParams","clipRect","innerColor","outerColor","clipColor","debugContent","girdSize","screenTransform","computed","uiSetter","setter","type","id","value","callback","uiSetting","default","push","methods","Init","$refs","page","getCanvas","getContext","setViewer","Render","gridx","parseInt","width","gridy","height","clearRect","innerPoly","polyClip","poly1","rect1","x0","y0","x1","y1","py0","py1","py2","py3","edgeClip","p0","p1","s","p","pt","v","m","isInsideEdge","intersect","Math","floor","SetUI","mounted","__exports__","render"],"sourceRoot":""}