{"version":3,"file":"js/217.02fff3b4.js","mappings":"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","sources":["webpack://rock-sugar/./src/pages/CG/Experiment/DrawCircle/index.vue","webpack://rock-sugar/./src/pages/CG/Experiment/DrawCircle/index.vue?01cb"],"sourcesContent":["<template lang=\"html\">\r\n    <nano_cg_experiment_page\r\n        :prop_des_data=\"desData\"\r\n        :prop_ui_setter=\"uiSetter\"\r\n        :prop_section_params=\"sectionParams\"\r\n        ref=\"page\"\r\n    />\r\n</template>\r\n<script>\r\n\r\n\r\n\r\nimport uiSetting from \"../ui-setting\"\r\n\r\nconst desData = {\r\n    category:\"Experiment\",\r\n    name:\"DrawCircle\",\r\n    buttonContent:\"查看源码\",\r\n    title:\"绘制圆\",\r\n    content:\"Draw a circle without pi.\"\r\n}\r\n/*\r\n    @author:haruluya\r\n    @des: Ex05 Draw a circle.\r\n*/\r\n\r\nexport default {\r\n    name: \"DrawCircle\",\r\n    data() {\r\n        return {\r\n            canvas:null,\r\n            ctx:null,\r\n            // component data.\r\n            desData,\r\n            // params of page.\r\n            sectionParams:{\r\n                circleCenter:{x:30,y:18},\r\n                radius:10,\r\n                color:'#0bc6e3',\r\n                girdSize:10,\r\n                debugContent:null,\r\n            }\r\n        };\r\n    },\r\n\r\n    computed:{\r\n        //uiSetter.\r\n        uiSetter(){\r\n            let sectionParams = this.sectionParams;\r\n            return [\r\n                { type: \"slider-vector\", id: \"circleCenter\", value: sectionParams.circleCenter, min: { x: 0, y: 0 }, max: { x: 500, y: 500 }, callback: uiSetting.globalUiCallbacks.updatePoint(this, \"circleCenter\") },\r\n                {type:\"slider\", id:\"radius\", value: sectionParams.radius, min:0, max:100, \r\n                    callback:uiSetting.globalUiCallbacks.updateValue(this,\"radius\")\r\n                },\r\n                {type:\"slider\", id:\"girdSize\", value: sectionParams.girdSize, min:1, max:100, \r\n                    callback:uiSetting.globalUiCallbacks.updateValue(this,\"girdSize\")\r\n                },\r\n                { type: \"color\",id: \"color\",default: sectionParams.color, callback: uiSetting.globalUiCallbacks.updateValue(this, \"color\")}\r\n            ]\r\n        },\r\n    },\r\n    methods: {\r\n        Init() {\r\n            this.$refs.page.Init();\r\n\r\n            this.canvas = this.$refs.page.getCanvas();\r\n            this.ctx = canvas.getContext('2d');\r\n\r\n            this.Render();\r\n        },\r\n        Render() {\r\n            this.$refs.page.Render();\r\n\r\n            const ctx = this.ctx;\r\n            const sectionParams = this.sectionParams;\r\n            const gridx = parseInt(this.canvas.width / this.sectionParams.girdSize) - 1;\r\n            const gridy = parseInt(this.canvas.height / this.sectionParams.girdSize) - 1;\r\n\r\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            uiSetting.drawGrid(this);\r\n            \r\n            this.sectionParams.debugContent = [{\r\n                title:\"grid\",content:\"The number of cells in the x direction: \" + gridx + \"\\nThe number of cells in the y direction: \" + gridy,\r\n            }];\r\n\r\n            ctx.fillStyle = sectionParams.color;\r\n\r\n            const r = this.sectionParams.radius;\r\n\r\n            // radius < 1;\r\n            if(r<1)\r\n                return;\r\n            let x, y;\r\n            let e=1-r;\r\n            x=0;\r\n            y=r;\r\n            const circleCenter = this.sectionParams.circleCenter\r\n            while(x<y)\r\n            {\r\n\r\n                //draw point.\r\n                const p = {x,y}; \r\n                uiSetting.drawPointInGrid(this,p.x +circleCenter.x,p.y+circleCenter.y,sectionParams.color);\r\n                uiSetting.drawPointInGrid(this,p.x +circleCenter.x, p.y+circleCenter.y,sectionParams.color);\r\n                uiSetting.drawPointInGrid(this,p.y +circleCenter.x, p.x+circleCenter.y,sectionParams.color);\r\n                uiSetting.drawPointInGrid(this,-p.y+circleCenter.x, p.x+circleCenter.y,sectionParams.color);\r\n                uiSetting.drawPointInGrid(this,-p.x+circleCenter.x, p.y+circleCenter.y,sectionParams.color);\r\n                uiSetting.drawPointInGrid(this,p.y +circleCenter.x,-p.x+circleCenter.y,sectionParams.color);\r\n                uiSetting.drawPointInGrid(this,p.x +circleCenter.x,-p.y+circleCenter.y,sectionParams.color);\r\n                uiSetting.drawPointInGrid(this,-p.x+circleCenter.x,-p.y+circleCenter.y,sectionParams.color);\r\n                uiSetting.drawPointInGrid(this,-p.y+circleCenter.x,-p.x+circleCenter.y,sectionParams.color);\r\n\r\n                if(e<=0)\r\n                    e=e+2*x+3;\r\n                else\r\n                {\r\n                    e=e+2*x-2*y+5;\r\n                    y--;\r\n                }\r\n                x++;\r\n            }\r\n        },\r\n        SetUI(){\r\n            this.$refs.page.SetUI();\r\n        },\r\n    },\r\n    mounted() {\r\n        this.Init();\r\n        this.SetUI();\r\n    },\r\n  \r\n};\r\n</script>\r\n","import { render } from \"./index.vue?vue&type=template&id=7a8484e9&lang=html\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"F:\\\\Note-Haruluya\\\\Project\\\\Rock-sugar\\\\rock-sugar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_nano_cg_experiment_page","prop_des_data","$data","prop_ui_setter","$options","prop_section_params","ref","desData","category","name","buttonContent","title","content","data","canvas","ctx","sectionParams","circleCenter","x","y","radius","color","girdSize","debugContent","computed","uiSetter","this","type","id","value","min","max","callback","uiSetting","default","methods","Init","$refs","page","getCanvas","getContext","Render","gridx","parseInt","width","gridy","height","clearRect","fillStyle","r","e","p","SetUI","mounted","__exports__","render"],"sourceRoot":""}