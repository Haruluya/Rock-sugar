{"version":3,"file":"js/302.1b383f68.js","mappings":"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","sources":["webpack://rock-sugar/./src/pages/Webgl/WebglDemo/EnvMapping/index.vue","webpack://rock-sugar/./src/pages/Webgl/WebglDemo/EnvMapping/resource/vertex-shader.js","webpack://rock-sugar/./src/pages/Webgl/WebglDemo/EnvMapping/resource/fragment-shader.js","webpack://rock-sugar/./src/pages/Webgl/WebglDemo/EnvMapping/resource/data.js","webpack://rock-sugar/./src/pages/Webgl/WebglDemo/EnvMapping/index.vue?3fb3"],"sourcesContent":["<template lang=\"html\">\r\n    <nano_webgl_demo_panel\r\n        :prop_des_data=\"desData\"\r\n        :prop_ui_setter=\"uiSetter\"\r\n        :prop_section_params=\"sectionParams\"\r\n        :prop_vertex_shader=\"vertexShaderSource\"\r\n        :prop_fragment_shader=\"fragmentShaderSource\"\r\n        ref=\"page\"\r\n        @Init=\"Init\"\r\n        @Render=\"Render\"\r\n        @prop_ui_setter=\"uiSetter\"\r\n    />\r\n</template>\r\n<script>\r\nimport vertexShaderSource from './resource/vertex-shader.js'\r\nimport fragmentShaderSource from './resource/fragment-shader.js'\r\nimport negx from './images/neg-x.jpg'\r\nimport negy from './images/neg-y.jpg'\r\nimport negz from './images/neg-z.jpg'\r\nimport posx from './images/pos-x.jpg'\r\nimport posy from './images/pos-y.jpg'\r\nimport posz from './images/pos-z.jpg'\r\n\r\nimport data from './resource/data.js'\r\nimport uiSetting from \"../ui-setting\"\r\n\r\nconst desData = {\r\n    category:\"Webgl\",\r\n    name:\"EnvMapping\",\r\n    buttonContent:\"查看源码\",\r\n    title:\"环境贴图\",\r\n    content:\"Environment mapping.\"\r\n}\r\n\r\nconst positions = data.position\r\nconst normals = data.normal\r\n\r\nexport default {\r\n    name:'SpotLight',\r\n    data() {\r\n        return {\r\n            gl: null,\r\n            desData,\r\n            program:null,\r\n            vertexShaderSource,\r\n            fragmentShaderSource,\r\n            perspective:{\r\n                aspect:0,\r\n                fieldOfViewRadians:  HNWUEngine.degToRad(60),\r\n                zNear: 1,\r\n                zFar: 2000,\r\n            },\r\n            transform:{\r\n                translation:[0, 0, -0],\r\n                rotation:[HNWUEngine.degToRad(180), HNWUEngine.degToRad(200), HNWUEngine.degToRad(0)],\r\n                scale:[1,1,1]\r\n            },\r\n            camera:{\r\n                target:[0, 0, 0],\r\n                position:[0, 0, 2],\r\n                up:[0,1,0]\r\n            },\r\n            sectionParams:{\r\n                texture:null,\r\n            },\r\n            page:null,\r\n            uiSetter:[],\r\n        }\r\n    },\r\n    methods: {\r\n        Init(){\r\n            this.page = this.$refs.page;\r\n            this.gl = this.page.getGL();\r\n            const gl = this.gl;\r\n            \r\n            this.program = this.page.getProgram();\r\n\r\n            //Get bufferinfo and setters.\r\n            this.perspective.aspect = this.gl.canvas.clientWidth / this.gl.canvas.clientHeight;\r\n\r\n            this.$refs.page.setTransform(this.transform);\r\n            this.page.addBuffer(\"position\",{numComponents:3,data:positions});\r\n            this.page.addBuffer(\"normal\",{numComponents:3,data:normals});\r\n            this.sectionParams.texture = gl.createTexture();\r\n            gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.sectionParams.texture);\r\n            this.faceInfos(gl).forEach((faceInfo,index) => {\r\n                const {target, url} = faceInfo;\r\n\r\n                // Upload the canvas to the cubemap face.\r\n                const level = 0;\r\n                const internalFormat = gl.RGBA;\r\n                const format = gl.RGBA;\r\n                const type = gl.UNSIGNED_BYTE;\r\n\r\n                // Asynchronously load an image\r\n                const image = new Image();\r\n                image.src = url;\r\n                image.addEventListener('load', ()=>{\r\n                    gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.sectionParams.texture);\r\n                    gl.texImage2D(target, level, internalFormat, format, type, image);\r\n                    gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n                    if (index === 5){\r\n                        this.page.Render()\r\n                    }\r\n                });\r\n            });\r\n           \r\n        },\r\n        Render(){\r\n            const gl = this.gl;\r\n            gl.enable(gl.CULL_FACE);\r\n            gl.enable(gl.DEPTH_TEST);\r\n\r\n            let cameraMatrix = HNWUEngine.lookAt(this.camera.position, this.camera.target, this.camera.up);\r\n            let viewMatrix = HNWUEngine.inverse(cameraMatrix);\r\n            let projectionMatrix = HNWUEngine.perspective(\r\n                this.perspective.fieldOfViewRadians, \r\n                this.perspective.aspect, \r\n                this.perspective.zNear, \r\n                this.perspective.zFar\r\n                );\r\n            let worldMatrix = HNWUEngine.getTransformMatrix(\r\n                HNWUEngine.xRotation(0),\r\n                this.transform\r\n            )\r\n            \r\n            this.page.addUniform(\"u_projection\",projectionMatrix);\r\n            this.page.addUniform(\"u_view\",viewMatrix);\r\n            this.page.addUniform(\"u_world\",worldMatrix);\r\n            this.page.addUniform(\"u_worldCameraPosition\",this.camera.position);\r\n            this.page.addUniform(\"u_texture\",this.sectionParams.texture);\r\n\r\n            this.$refs.page.glDraw({mode:gl.TRIANGLES,first:0,count:6*6})\r\n\r\n        },\r\n        faceInfos(gl){\r\n            return[\r\n                {\r\n                target: gl.TEXTURE_CUBE_MAP_POSITIVE_X,\r\n                url: negx,\r\n                },\r\n                {\r\n                target: gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\r\n                url: negy,\r\n                },\r\n                {\r\n                target: gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\r\n                url: negz,\r\n                },\r\n                {\r\n                target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\r\n                url: posx,\r\n                },\r\n                {\r\n                target: gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\r\n                url: posy,\r\n                },\r\n                {\r\n                target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\r\n                url: posz,\r\n                },\r\n            ]\r\n        }\r\n\r\n    },\r\n\r\n}\r\n</script>","export default\r\n`\r\nattribute vec4 a_position;\r\nattribute vec3 a_normal;\r\n\r\nuniform mat4 u_projection;\r\nuniform mat4 u_view;\r\nuniform mat4 u_world;\r\n\r\nvarying vec3 v_worldPosition;\r\nvarying vec3 v_worldNormal;\r\n\r\nvoid main() {\r\n  // Multiply the position by the matrix.\r\n  gl_Position = u_projection * u_view * u_world * a_position;\r\n\r\n  // send the view position to the fragment shader\r\n  v_worldPosition = (u_world * a_position).xyz;\r\n\r\n  // orient the normals and pass to the fragment shader\r\n  v_worldNormal = mat3(u_world) * a_normal;\r\n}\r\n`","export default\r\n`\r\nprecision highp float;\r\n\r\n// Passed in from the vertex shader.\r\nvarying vec3 v_worldPosition;\r\nvarying vec3 v_worldNormal;\r\n\r\n// The texture.\r\nuniform samplerCube u_texture;\r\n\r\n// The position of the camera\r\nuniform vec3 u_worldCameraPosition;\r\n\r\nvoid main() {\r\n  vec3 worldNormal = normalize(v_worldNormal);\r\n  vec3 eyeToSurfaceDir = normalize(v_worldPosition - u_worldCameraPosition);\r\n  vec3 direction = reflect(eyeToSurfaceDir,worldNormal);\r\n\r\n  gl_FragColor = textureCube(u_texture, direction);\r\n}\r\n`","export default\r\n{\r\n    position: new Float32Array(\r\n        [\r\n        -0.5, -0.5,  -0.5,\r\n        -0.5,  0.5,  -0.5,\r\n         0.5, -0.5,  -0.5,\r\n        -0.5,  0.5,  -0.5,\r\n         0.5,  0.5,  -0.5,\r\n         0.5, -0.5,  -0.5,\r\n    \r\n        -0.5, -0.5,   0.5,\r\n         0.5, -0.5,   0.5,\r\n        -0.5,  0.5,   0.5,\r\n        -0.5,  0.5,   0.5,\r\n         0.5, -0.5,   0.5,\r\n         0.5,  0.5,   0.5,\r\n    \r\n        -0.5,   0.5, -0.5,\r\n        -0.5,   0.5,  0.5,\r\n         0.5,   0.5, -0.5,\r\n        -0.5,   0.5,  0.5,\r\n         0.5,   0.5,  0.5,\r\n         0.5,   0.5, -0.5,\r\n    \r\n        -0.5,  -0.5, -0.5,\r\n         0.5,  -0.5, -0.5,\r\n        -0.5,  -0.5,  0.5,\r\n        -0.5,  -0.5,  0.5,\r\n         0.5,  -0.5, -0.5,\r\n         0.5,  -0.5,  0.5,\r\n    \r\n        -0.5,  -0.5, -0.5,\r\n        -0.5,  -0.5,  0.5,\r\n        -0.5,   0.5, -0.5,\r\n        -0.5,  -0.5,  0.5,\r\n        -0.5,   0.5,  0.5,\r\n        -0.5,   0.5, -0.5,\r\n    \r\n         0.5,  -0.5, -0.5,\r\n         0.5,   0.5, -0.5,\r\n         0.5,  -0.5,  0.5,\r\n         0.5,  -0.5,  0.5,\r\n         0.5,   0.5, -0.5,\r\n         0.5,   0.5,  0.5,\r\n    \r\n    ]),\r\n\r\n    normal: new Float32Array(\r\n        [\r\n           0, 0, -1,\r\n           0, 0, -1,\r\n           0, 0, -1,\r\n           0, 0, -1,\r\n           0, 0, -1,\r\n           0, 0, -1,\r\n    \r\n           0, 0, 1,\r\n           0, 0, 1,\r\n           0, 0, 1,\r\n           0, 0, 1,\r\n           0, 0, 1,\r\n           0, 0, 1,\r\n    \r\n           0, 1, 0,\r\n           0, 1, 0,\r\n           0, 1, 0,\r\n           0, 1, 0,\r\n           0, 1, 0,\r\n           0, 1, 0,\r\n    \r\n           0, -1, 0,\r\n           0, -1, 0,\r\n           0, -1, 0,\r\n           0, -1, 0,\r\n           0, -1, 0,\r\n           0, -1, 0,\r\n    \r\n          -1, 0, 0,\r\n          -1, 0, 0,\r\n          -1, 0, 0,\r\n          -1, 0, 0,\r\n          -1, 0, 0,\r\n          -1, 0, 0,\r\n    \r\n           1, 0, 0,\r\n           1, 0, 0,\r\n           1, 0, 0,\r\n           1, 0, 0,\r\n           1, 0, 0,\r\n           1, 0, 0,\r\n    ])\r\n    \r\n}","import { render } from \"./index.vue?vue&type=template&id=292392d6&lang=html\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"F:\\\\Note-Haruluya\\\\Project\\\\Rock-sugar\\\\rock-sugar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_nano_webgl_demo_panel","prop_des_data","$data","prop_ui_setter","prop_section_params","prop_vertex_shader","prop_fragment_shader","ref","onInit","$options","onRender","onProp_ui_setter","position","Float32Array","normal","desData","category","name","buttonContent","title","content","positions","data","normals","gl","program","vertexShaderSource","fragmentShaderSource","perspective","aspect","fieldOfViewRadians","HNWUEngine","degToRad","zNear","zFar","transform","translation","rotation","scale","camera","target","up","sectionParams","texture","page","uiSetter","methods","Init","this","$refs","getGL","getProgram","canvas","clientWidth","clientHeight","setTransform","addBuffer","numComponents","createTexture","bindTexture","TEXTURE_CUBE_MAP","faceInfos","forEach","faceInfo","index","url","level","internalFormat","RGBA","format","type","UNSIGNED_BYTE","image","Image","src","addEventListener","texImage2D","generateMipmap","Render","enable","CULL_FACE","DEPTH_TEST","cameraMatrix","lookAt","viewMatrix","inverse","projectionMatrix","worldMatrix","getTransformMatrix","xRotation","addUniform","glDraw","mode","TRIANGLES","first","count","TEXTURE_CUBE_MAP_POSITIVE_X","negx","TEXTURE_CUBE_MAP_NEGATIVE_X","negy","TEXTURE_CUBE_MAP_POSITIVE_Y","negz","TEXTURE_CUBE_MAP_NEGATIVE_Y","posx","TEXTURE_CUBE_MAP_POSITIVE_Z","posy","TEXTURE_CUBE_MAP_NEGATIVE_Z","posz","__exports__","render"],"sourceRoot":""}