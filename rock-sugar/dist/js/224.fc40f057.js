"use strict";(self["webpackChunkrock_sugar"]=self["webpackChunkrock_sugar"]||[]).push([[224],{8224:function(e,t,i){i.r(t),i.d(t,{default:function(){return c}});var a=i(3396);function n(e,t,i,n,s,r){const l=(0,a.up)("nano_cg_experiment_page");return(0,a.wg)(),(0,a.j4)(l,{prop_des_data:s.desData,prop_ui_setter:r.uiSetter,prop_section_params:s.sectionParams,ref:"page"},null,8,["prop_des_data","prop_ui_setter","prop_section_params"])}var s=i(2812);const r={category:"Experiment",name:"Bresenham",buttonContent:"查看源码",title:"Bresenham画线",content:"Bresenham's line algorithm."};var l={name:"Bresenham",data(){return{canvas:null,ctx:null,desData:r,sectionParams:{beginPoint:{x:1,y:1},endPoint:{x:100,y:20},color:"#0bc6e3",girdSize:10,debugContent:null}}},computed:{uiSetter(){let e=this.sectionParams;return[{type:"slider",id:"beginX",value:e.beginPoint.x,min:0,max:100,callback:s.Z.globalUiCallbacks.updatePoint(this,"beginPoint","x")},{type:"slider",id:"beginY",value:e.beginPoint.y,min:0,max:100,callback:s.Z.globalUiCallbacks.updatePoint(this,"beginPoint","y")},{type:"slider",id:"endX",value:e.endPoint.x,min:0,max:100,callback:s.Z.globalUiCallbacks.updatePoint(this,"endPoint","x")},{type:"slider",id:"endY",value:e.endPoint.y,min:0,max:100,callback:s.Z.globalUiCallbacks.updatePoint(this,"endPoint","y")},{type:"slider",id:"girdSize",value:e.girdSize,min:1,max:100,callback:s.Z.globalUiCallbacks.updateValue(this,"girdSize")},{type:"color",id:"color",default:e.color,callback:s.Z.globalUiCallbacks.updateValue(this,"color")}]}},methods:{Init(){this.$refs.page.Init(),this.canvas=this.$refs.page.getCanvas(),this.ctx=canvas.getContext("2d"),this.Render()},Render(){this.$refs.page.Render();const e=this.ctx,t=this.sectionParams,i=parseInt(this.canvas.width/this.sectionParams.girdSize)-1,a=parseInt(this.canvas.height/this.sectionParams.girdSize)-1;e.clearRect(0,0,this.canvas.width,this.canvas.height),s.Z.drawGrid(this),this.sectionParams.debugContent=[{title:"grid",content:"The number of cells in the x direction: "+i+"\nThe number of cells in the y direction: "+a}],e.fillStyle=t.color;let n,r,l=t.beginPoint,o=t.endPoint,d=null,c=0,h=-.5;if(l.y!=o.y)if(l.x!=o.x)if(n=(o.y-l.y)/(o.x-l.x),n>0&&n<=1){l.x>o.x&&(d=l,l=o,o=d),h=-.5,r=l.x,c=l.y;while(r<o.x)s.Z.drawPointInGrid(this,r,c),h+=n,h>0&&(c++,h-=1),r++}else if(n>=-1&&n<0){l.x>o.x&&(d=l,l=o,o=d),h=.5,r=l.x,c=l.y;while(r<o.x)s.Z.drawPointInGrid(this,r,c),h+=n,h<0&&(c--,h+=1),r++}else if(n>1){l.y>o.y&&(d=l,l=o,o=d),h=-.5,r=l.x,c=l.y;while(c<o.y)s.Z.drawPointInGrid(this,r,c),h+=1/n,h>0&&(r+=1,h-=1),c++}else{l.y>o.y&&(d=l,l=o,o=d),h=.5,r=l.x,c=l.y;while(c<o.y)s.Z.drawPointInGrid(this,r,c),h+=1/n,h<0&&(r--,h+=1),c++}else for(l.y>o.y&&(d=l,l=o,o=d),c=l.y;c<o.y;c++)s.Z.drawPointInGrid(this,l.x,c);else for(l.x>o.x&&(d=l,l=o,o=d),r=l.x;r<o.x;r++)s.Z.drawPointInGrid(this,r,l.y)},SetUI(){this.$refs.page.SetUI(),s.Z.drawGrid(this)}},mounted(){this.Init(),this.SetUI()},destroyed(){this.Destory()}},o=i(89);const d=(0,o.Z)(l,[["render",n]]);var c=d}}]);
//# sourceMappingURL=224.fc40f057.js.map