"use strict";(self["webpackChunkrock_sugar"]=self["webpackChunkrock_sugar"]||[]).push([[965],{4965:function(e,i,o){o.r(i),o.d(i,{default:function(){return _}});var a=o(3396);function r(e,i,o,r,n,t){const s=(0,a.up)("nano_webgl_demo_panel");return(0,a.wg)(),(0,a.j4)(s,{prop_des_data:n.desData,prop_ui_setter:n.uiSetter,prop_vertex_shader:n.vertexShaderSource,prop_fragment_shader:n.fragmentShaderSource,prop_section_params:n.sectionParams,ref:"page",onInit:t.Init,onRender:t.Render,onProp_ui_setter:n.uiSetter},null,8,["prop_des_data","prop_ui_setter","prop_vertex_shader","prop_fragment_shader","prop_section_params","onInit","onRender","onProp_ui_setter"])}var n="\nattribute vec4 a_position;\nattribute vec3 a_normal;\nattribute vec4 a_color;\n//点光源位置。\nuniform vec3 u_lightWorldPosition;\n//\nuniform vec3 u_viewWorldPosition;\n//变换矩阵.\nuniform mat4 u_world;\nuniform mat4 u_worldViewProjection;\nuniform mat4 u_worldInverseTranspose;\nvarying vec3 v_normal;\nvarying vec3 v_surfaceToLight;\nvarying vec3 v_surfaceToView;\nvarying vec4 v_color;\nvoid main() {\n    gl_Position = u_worldViewProjection * a_position;\n    v_normal = mat3(u_worldInverseTranspose) * a_normal;\n    vec3 surfaceWorldPosition = (u_world * a_position).xyz;\n    v_surfaceToLight = u_lightWorldPosition - surfaceWorldPosition;\n    v_surfaceToView = normalize(u_viewWorldPosition - surfaceWorldPosition);\n    v_color = a_color;\n}\n",t="\nprecision mediump float;\nvarying vec3 v_normal;\nvarying vec3 v_surfaceToLight;\nvarying vec3 v_surfaceToView;\nvarying vec4 v_color;\nuniform float u_shininess;\nuniform vec3 u_lightColor;\nuniform vec3 u_specularColor;\n\nvoid main() {\n    vec3 normal = normalize(v_normal);\n    vec3 surfaceToLightDirection = normalize(v_surfaceToLight);\n    vec3 surfaceToViewDirection = normalize(v_surfaceToView);\n    vec3 halfVector = normalize(surfaceToLightDirection + surfaceToViewDirection);\n    float light = dot(normal, surfaceToLightDirection);\n    float specular = 0.0;\n    \n    if (light > 0.0) {\n        specular = pow(dot(normal, halfVector), u_shininess);\n    }\n    \n    gl_FragColor = v_color;\n    gl_FragColor.rgb *= light * u_lightColor;\n    gl_FragColor.rgb += specular * u_specularColor;\n}\n",s=(o(8675),o(3408),o(4590),{position:new Float32Array([200,50,0,0,50,0,0,150,0,0,150,0,200,150,0,200,50,0,200,50,100,0,50,100,0,50,0,0,50,0,200,50,0,200,50,100,200,50,0,200,150,0,200,150,100,200,150,100,200,50,100,200,50,0,0,50,0,0,50,100,0,150,100,0,150,100,0,150,0,0,50,0,0,150,0,0,150,100,200,150,100,200,150,100,200,150,0,0,150,0,200,50,100,200,150,100,0,150,100,0,150,100,0,50,100,200,50,100]),color:new Uint8Array([0,59,252,0,80,252,0,218,252,0,218,252,0,80,252,0,59,252,252,0,0,150,0,0,0,0,0,0,0,0,150,0,0,252,0,0,252,227,103,150,227,103,0,227,103,0,227,103,150,227,103,252,227,103,252,227,103,150,227,103,0,227,103,0,227,103,150,227,103,252,227,103,252,0,0,150,0,0,0,0,0,0,0,0,150,0,0,252,0,0,0,59,252,0,80,252,0,218,252,0,218,252,0,80,252,0,59,252]),normal:new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1])}),l=o(720);const c={category:"Webgl",name:"LightingPoint",buttonContent:"查看源码",title:"点光源",content:"Point light source illuminates the world and causes shadows."},g=s.position,u=s.color,h=s.normal;var p={name:"LightingPoint",data(){return{gl:null,canvas:null,program:null,vertexShaderSource:n,fragmentShaderSource:t,desData:c,perspective:{aspect:0,fieldOfViewRadians:HNWUEngine.degToRad(60),zNear:1,zFar:2e3},transform:{translation:[100,120,-20],rotation:[HNWUEngine.degToRad(180),HNWUEngine.degToRad(200),HNWUEngine.degToRad(0)],scale:[1,.7,.7]},camera:{target:[0,35,0],position:[100,150,200],up:[0,1,0]},sectionParams:{lightColor:{r:1,g:1,b:1},specularColor:{r:1,g:1,b:1},shininess:10,lightPosition:{x:0,y:0,z:120}},page:null,uiSetter:[]}},methods:{Init(){this.page=this.$refs.page,this.gl=this.page.getGL(),this.canvas=this.page.getCanvas(),this.program=this.page.getProgram(),this.perspective.aspect=this.gl.canvas.clientWidth/this.gl.canvas.clientHeight,this.page.setTransform(this.transform),this.page.addBuffer("position",{data:g}),this.page.addBuffer("color",{data:u}),this.page.addBuffer("normal",{data:h})},Render(){const e=this.gl,i=[this.sectionParams.lightPosition.x,this.sectionParams.lightPosition.y,this.sectionParams.lightPosition.z],o=[this.sectionParams.lightColor.r,this.sectionParams.lightColor.g,this.sectionParams.lightColor.b],a=[this.sectionParams.specularColor.r,this.sectionParams.specularColor.g,this.sectionParams.specularColor.b];e.enable(e.CULL_FACE),e.enable(e.DEPTH_TEST);let r=HNWUEngine.perspective(this.perspective.fieldOfViewRadians,this.perspective.aspect,this.perspective.zNear,this.perspective.zFar),n=HNWUEngine.lookAt(this.camera.position,this.camera.target,this.camera.up),t=HNWUEngine.inverse(n);var s=HNWUEngine.multiply3d(r,t);let l=HNWUEngine.getTransformMatrix(HNWUEngine.xRotation(0),this.transform);var c=HNWUEngine.multiply3d(s,l),g=HNWUEngine.inverse(l),u=HNWUEngine.transpose(g);this.page.addUniform("u_worldViewProjection",c),this.page.addUniform("u_worldInverseTranspose",u),this.page.addUniform("u_world",l),this.page.addUniform("u_lightWorldPosition",i),this.page.addUniform("u_viewWorldPosition",this.camera.position),this.page.addUniform("u_shininess",this.sectionParams.shininess),this.page.addUniform("u_lightColor",HNWUEngine.normalize(o)),this.page.addUniform("u_specularColor",HNWUEngine.normalize(a)),this.page.glDraw({mode:e.TRIANGLES,first:0,count:96})}},mounted(){this.uiSetter=[{type:"slider",id:"shininess",value:this.sectionParams.shininess,min:0,max:20,callback:l.Z.globalUiCallbacks.updateValue(this.sectionParams,this.$refs.page.Render,"shininess")},{type:"color",id:"lightColor",default:this.sectionParams.lightColor,callback:l.Z.globalUiCallbacks.updateValue(this.sectionParams,this.$refs.page.Render,"lightColor")},{type:"color",id:"specularColor",default:this.sectionParams.specularColor,callback:l.Z.globalUiCallbacks.updateValue(this.sectionParams,this.$refs.page.Render,"specularColor")},{type:"slider-vector",id:"lightPosition",value:this.sectionParams.lightPosition,min:{x:-100,y:-100,z:-100},max:{x:100,y:100,z:100},callback:l.Z.globalUiCallbacks.updateVector3(this.sectionParams,this.$refs.page.Render,"lightPosition")}]}},d=o(89);const m=(0,d.Z)(p,[["render",r],["__scopeId","data-v-f8abf780"]]);var _=m}}]);
//# sourceMappingURL=965.c7a4cfd3.js.map