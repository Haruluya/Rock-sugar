{"version":3,"file":"js/589.063361b3.js","mappings":"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","sources":["webpack://rock-sugar/./src/pages/CG/Experiment/Interfaces/Polygon.js","webpack://rock-sugar/./src/pages/CG/Experiment/SeedPolygon/index.vue","webpack://rock-sugar/./src/pages/CG/Experiment/SeedPolygon/index.vue?fb7a"],"sourcesContent":["/*\r\n    @author:haruluya\r\n    @des:The obstraction of polygon\r\n    @params:{\r\n        points:the points of polygon.\r\n    }\r\n*/\r\nclass Polygon{\r\n    constructor(points){\r\n        this.points = points\r\n        this.points.forEach((e,i)=>{\r\n            this[i] = e;\r\n        })\r\n    }\r\n    maxPointX(){\r\n        let max = 0;\r\n        this.points.forEach(element => {\r\n            max = max > element.x ? max : element.x;\r\n        });\r\n        return max;\r\n    }\r\n    minPointX(){\r\n        let min = this.maxPointX();\r\n        this.points.forEach(element =>{\r\n            min = min < element.x ? min : element.x;\r\n        })\r\n        return min;\r\n    }\r\n    maxPointY(){\r\n        let max = 0;\r\n        this.points.forEach(element => {\r\n            max = max > element.y ? max : element.y;\r\n        });\r\n        return max;\r\n    }\r\n    minPointY(){\r\n        let min = this.maxPointX();\r\n        this.points.forEach(element =>{\r\n            min = min < element.y ? min : element.y;\r\n        })\r\n        return min;\r\n    }\r\n    size(){\r\n        return this.points.length;\r\n    }\r\n    indexValue(index){\r\n        return this.points[index];\r\n    }\r\n    isInPolygon(point){\r\n        let i, j;\r\n        let c = false;\r\n        for (i=0, j=this.size()-1; i<this.size(); j=i++)\r\n        {\r\n            if(((this.points[i].y>point.y) != (this.points[j].y>point.y)) &&\r\n                (point.x<(this.points[j].x-this.points[i].x) *\r\n                (point.y-this.points[i].y) / (this.points[j].y-this.points[i].y) + this.points[i].x))\r\n            c = !c;\r\n        }\r\n        return c;\r\n    }\r\n}\r\nexport default Polygon;","<template lang=\"html\">\r\n    <nano_cg_experiment_page :prop_des_data=\"desData\" :prop_ui_setter=\"uiSetter\" :prop_section_params=\"sectionParams\"\r\n        ref=\"page\" />\r\n</template>\r\n<script>\r\n\r\nimport uiSetting from \"../ui-setting\"\r\nimport { Edge, Polygon } from \"../Interfaces\"\r\n\r\nconst desData = {\r\n    category: \"Experiment\",\r\n    name: \"EdgeTablePolygon\",\r\n    buttonContent: \"查看源码\",\r\n    title: \"种子填充\",\r\n    content: \"Seed polygon.\"\r\n}\r\n\r\n\r\n\r\n/*\r\n    @author:haruluya\r\n    @des: Ex09 SeedPolygon.\r\n*/\r\n\r\nexport default {\r\n    name: \"SeedPolygon\",\r\n    data() {\r\n        return {\r\n            canvas: null,\r\n            ctx: null,\r\n            // component data.\r\n            desData,\r\n            // params of page.\r\n            sectionParams: {\r\n                points: [{ x: 10, y: 100 }, { x: 100, y: 10 }, { x: 190, y: 100 }, { x: 100, y: 50 }],\r\n                // points:[{x:125,y:125},{x:250,y:43},{x:0,y:43}],\r\n                color:'#0bc6e3',\r\n                debugContent: null,\r\n                girdSize: 3,\r\n                seed:{x:100,y:20},\r\n                screenTransform:{x:0,y:0,scale:100}\r\n            }\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        //uiSetter.\r\n        uiSetter() {\r\n            let sectionParams = this.sectionParams;\r\n            let setter = [\r\n                {\r\n                    type: \"slider\", id: \"girdSize\", value: sectionParams.girdSize, min: 1, max: 100,\r\n                    callback: uiSetting.globalUiCallbacks.updateValue(this, \"girdSize\")\r\n                },\r\n                { type: \"color\",id: \"color\",default: sectionParams.color, callback: uiSetting.globalUiCallbacks.updateValue(this, \"color\")}\r\n            ];\r\n            for (let i= 0; i < this.sectionParams.points.length; i++){\r\n                setter.push(\r\n                 { type: \"slider-vector\", id: \"point\"+i , value: sectionParams.points[i], min: { x: 0, y: 0 }, max: { x: 500, y: 500 }, callback: uiSetting.globalUiCallbacks.updatePointArray(this, \"points\", i) },\r\n                )\r\n            }\r\n            setter.push(\r\n                { type: \"slider-vector\", id: \"seed\" , value: sectionParams.seed, min: { x: 0, y: 0 }, max: { x: 500, y: 500 }, callback: uiSetting.globalUiCallbacks.updatePoint(this, \"seed\") },\r\n            )\r\n            return setter;\r\n        },\r\n\r\n    },\r\n    methods: {\r\n        Init() {\r\n            this.$refs.page.Init();\r\n\r\n            this.canvas = this.$refs.page.getCanvas();\r\n            this.ctx = canvas.getContext('2d');\r\n            this.$refs.page.setViewer(this.sectionParams.screenTransform,this.Render);\r\n\r\n\r\n            this.Render();\r\n        },\r\n        Render() {\r\n            this.$refs.page.Render();\r\n\r\n            const ctx = this.ctx;\r\n            const gridx = parseInt(this.canvas.width / this.sectionParams.girdSize) - 1;\r\n            const gridy = parseInt(this.canvas.height / this.sectionParams.girdSize) - 1;\r\n\r\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n            this.sectionParams.girdSize += this.$refs.page.girdSize;\r\n            uiSetting.drawGrid(this);\r\n            \r\n            if(this.sectionParams.girdSize  <= 0) {\r\n                    this.sectionParams.girdSize = 1\r\n            }\r\n            this.sectionParams.debugContent = [{\r\n                title: \"grid\", content: \"The number of cells in the x direction: \" + gridx + \"\\nThe number of cells in the y direction: \" + gridy,\r\n            }];\r\n            const seed = this.sectionParams.seed;\r\n            //showPolygonInEdgeFlag.\r\n            const points = new Polygon(this.sectionParams.points);\r\n            if(!points.isInPolygon(seed) || points.size()<3){\r\n                console.log(\"points invalid!!!\")\r\n                return;\r\n            }\r\n\r\n            //获取多边形最小包围盒\r\n            let minx, maxx, miny, maxy;\r\n            minx = points.minPointX()-1;\r\n            maxx = points.maxPointX()+1;\r\n            miny = points.minPointY()-1;\r\n            maxy = points.maxPointY()+1;\r\n\r\n            if(seed.x<=minx || seed.x>=maxx || seed.y<=miny || seed.y>=maxy)\r\n                return;\r\n            //设置一个标志矩阵\r\n            let m = maxy - miny;\r\n            let n = maxx - minx;\r\n            let MF = [];\r\n            let i,j;\r\n            for(i=0; i<m; i++)\r\n                for(j=0; j<n; j++)\r\n                    MF[i*n+j] = false;\r\n            //绘制边界，并将边界像素标志置为true\r\n            let p0, p1;\r\n            let temp;\r\n            let vertics = points.size();\r\n            let x, y;\r\n            let tx, ty, dx, dy;\r\n            let k;\r\n            let x0, x1, y0, y1;\r\n\r\n            for(k=0; k<vertics; k++)//逐边绘制\r\n            {\r\n                //获取一条边p0p1\r\n                if(k == vertics-1)\r\n                {\r\n                    p0 = points[k];\r\n                    p1 = points[0];\r\n                }\r\n                else\r\n                {\r\n                    p0 = points[k];\r\n                    p1 = points[k+1];\r\n                }\r\n\r\n                x0 = p0.x;\r\n                y0 = p0.y;\r\n                x1 = p1.x;\r\n                y1 = p1.y;\r\n\r\n                if(y0 == y1)//水平边\r\n                {\r\n                    y = y0;\r\n                    if(x0>x1)\r\n                    {\r\n                        temp = x0;\r\n                        x0 = x1;\r\n                        x1 = temp;\r\n                    }\r\n                    for(x=x0; x<x1; x++)\r\n                    {\r\n                        uiSetting.drawPointInGrid(this, x, y , this.sectionParams.color);\r\n                        MF[(y-miny)*n+x-minx] = true;\r\n                    }\r\n                }\r\n                else if(x0 == x1)//垂直边\r\n                {\r\n                    x = x0;\r\n                    if(y0>y1)\r\n                    {\r\n                        temp = y0;\r\n                        y0 = y1;\r\n                        y1 = temp;\r\n                    }\r\n                    for(y=y0; y<y1; y++)\r\n                    {\r\n                        uiSetting.drawPointInGrid(this, x, y , this.sectionParams.color);\r\n                        MF[(y-miny)*n+x-minx] = true;\r\n                    }\r\n\r\n                }\r\n                else//非水平和垂直边\r\n                {\r\n                    dy = (y1-y0)/(x1-x0);\r\n                    dx = 1/dy;\r\n\r\n                    if(dy>-1 && dy<1)\r\n                    {\r\n                        if(x0>x1)\r\n                        {\r\n                            temp = x0;\r\n                            x0 = x1;\r\n                            x1 = temp;\r\n                            temp = y0;\r\n                            y0 = y1;\r\n                            y1 = temp;\r\n                        }\r\n                        ty = y0;\r\n                        for(x=x0; x<=x1; x++)\r\n                        {\r\n                            y = Math.floor(ty+0.5);\r\n                            uiSetting.drawPointInGrid(this, x, y , this.sectionParams.color);\r\n                            MF[(y-miny)*n+x-minx] = true;\r\n                            ty += dy;\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        if(y0>y1)\r\n                        {\r\n                            temp = x0;\r\n                            x0 = x1;\r\n                            x1 = temp;\r\n                            temp = y0;\r\n                            y0 = y1;\r\n                            y1 = temp;\r\n                        }\r\n                        tx = x0;\r\n                        for(y=y0; y<=y1; y++)\r\n                        {\r\n                            x = Math.floor(tx+0.5);\r\n                            uiSetting.drawPointInGrid(this, x, y , this.sectionParams.color);\r\n                            MF[(y-miny)*n+x-minx] = true;\r\n                            tx += dx;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //种子点压栈，压栈像素标志置为true\r\n            let stack = [];\r\n            stack.push(seed);\r\n            MF[(seed.y-miny)*n + seed.x-minx] = true;\r\n            //当栈不为空时，退栈，绘制像素点\r\n            //对当前退栈元素的左上右下点进行检查，若标志为false，压栈，并将压栈像素标志置为true\r\n            let ps;\r\n            p0 = {x:0,y:0}\r\n            while(stack.length)\r\n            {\r\n                let temp = stack.pop();\r\n                ps = {x:temp.x,y:temp.y};\r\n                uiSetting.drawPointInGrid(this, ps.x, ps.y , this.sectionParams.color);\r\n\r\n\r\n                p0 = {x: ps.x - 1, y: ps.y}\r\n                if(!MF[(p0.y-miny)*n + p0.x-minx])\r\n                {\r\n                    stack.push(p0);\r\n                    MF[(p0.y-miny)*n + p0.x-minx] = true;\r\n                }\r\n\r\n                p0 = {x: ps.x + 1, y: ps.y}\r\n                if(!MF[(p0.y-miny)*n + p0.x-minx])\r\n                {\r\n                    stack.push(p0);\r\n                    MF[(p0.y-miny)*n + p0.x-minx] = true;\r\n                }\r\n\r\n                p0 = {x: ps.x, y: ps.y-1}\r\n                if(!MF[(p0.y-miny)*n + p0.x-minx])\r\n                {\r\n                    stack.push(p0);\r\n                    MF[(p0.y-miny)*n + p0.x-minx] = true;\r\n                }\r\n\r\n                p0 = {x: ps.x, y: ps.y+1}\r\n                if(!MF[(p0.y-miny)*n + p0.x-minx])\r\n                {   \r\n                    stack.push(p0);\r\n                    MF[(p0.y-miny)*n + p0.x-minx] = true;\r\n                }\r\n\r\n            }\r\n\r\n       \r\n        },\r\n        SetUI() {\r\n            this.$refs.page.SetUI();\r\n        },\r\n\r\n\r\n    },\r\n    mounted() {\r\n        this.Init();\r\n        this.SetUI();\r\n    },\r\n\r\n};\r\n\r\n</script>\r\n","import { render } from \"./index.vue?vue&type=template&id=2292b02c&lang=html\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"F:\\\\Note-Haruluya\\\\Project\\\\Rock-sugar\\\\rock-sugar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["Polygon","constructor","points","this","forEach","e","i","maxPointX","max","element","x","minPointX","min","maxPointY","y","minPointY","size","length","indexValue","index","isInPolygon","point","j","c","_createBlock","_component_nano_cg_experiment_page","prop_des_data","$data","prop_ui_setter","$options","prop_section_params","ref","desData","category","name","buttonContent","title","content","data","canvas","ctx","sectionParams","color","debugContent","girdSize","seed","screenTransform","scale","computed","uiSetter","setter","type","id","value","callback","uiSetting","default","push","methods","Init","$refs","page","getCanvas","getContext","setViewer","Render","gridx","parseInt","width","gridy","height","clearRect","console","log","minx","maxx","miny","maxy","p0","p1","temp","m","n","MF","tx","ty","dx","dy","k","x0","x1","y0","y1","vertics","Math","floor","ps","stack","pop","SetUI","mounted","__exports__","render"],"sourceRoot":""}