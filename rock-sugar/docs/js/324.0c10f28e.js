"use strict";(self["webpackChunkrock_sugar"]=self["webpackChunkrock_sugar"]||[]).push([[324],{4324:function(n,e,o){o.r(e),o.d(e,{default:function(){return d}});var t=o(3396);function r(n,e,o,r,i,a){const s=(0,t.up)("nano_shader_toy_renderer_page");return(0,t.wg)(),(0,t.j4)(s,{prop_des_data:i.desData,prop_ui_setter:i.uiSetter,prop_vertex_shader:i.vertexShaderSource,prop_fragment_shader:i.fragmentShaderSource,ref:"page",onInit:a.Init,onRender:a.Render},null,8,["prop_des_data","prop_ui_setter","prop_vertex_shader","prop_fragment_shader","onInit","onRender"])}o(8675),o(3408),o(4590);var i="\nattribute vec4 a_position;\n\nvoid main() {\n  gl_Position = a_position;\n}\n",a="\nprecision highp float;\n\nuniform vec2 iResolution;\nuniform vec2 iMouse;\nuniform float iTime;\n\nfloat sphIntersect( in vec3 ro, in vec3 rd, in vec4 sph )\n{\n\tvec3 oc = ro - sph.xyz;\n\tfloat b = dot( oc, rd );\n\tfloat c = dot( oc, oc ) - sph.w*sph.w;\n\tfloat h = b*b - c;\n\tif( h<0.0 ) return -1.0;\n\treturn -b - sqrt( h );\n}\n\n\nfloat sphSoftShadow( in vec3 ro, in vec3 rd, in vec4 sph, in float k )\n{\n    vec3 oc = ro - sph.xyz;\n    float b = dot( oc, rd );\n    float c = dot( oc, oc ) - sph.w*sph.w;\n    float h = b*b - c;\n    \n#if 0\n    // physically plausible shadow\n    float d = sqrt( max(0.0,sph.w*sph.w-h)) - sph.w;\n    float t = -b - sqrt( max(h,0.0) );\n    return (t<0.0) ? 1.0 : smoothstep(0.0, 1.0, 2.5*k*d/t );\n#else\n    // cheap but not plausible alternative\n    return (b>0.0) ? step(-0.0001,c) : smoothstep( 0.0, 1.0, h*k/b );\n#endif    \n}    \n            \nfloat sphOcclusion( in vec3 pos, in vec3 nor, in vec4 sph )\n{\n    vec3  r = sph.xyz - pos;\n    float l = length(r);\n    return dot(nor,r)*(sph.w*sph.w)/(l*l*l);\n}\n\nvec3 sphNormal( in vec3 pos, in vec4 sph )\n{\n    return normalize(pos-sph.xyz);\n}\n\n//=====================================================\n\nfloat iPlane( in vec3 ro, in vec3 rd )\n{\n    return (-1.0 - ro.y)/rd.y;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy) / iResolution.y;\n    \n\tvec3 ro = vec3(0.0, 0.0, 4.0 );\n\tvec3 rd = normalize( vec3(p,-2.0) );\n\t\n    // sphere animation\n    vec4 sph = vec4( cos( iTime + vec3(2.0,1.0,1.0) + 0.0 )*vec3(1.5,0.0,1.0), 1.0 );\n\n    if( iMouse.y>0.0 ) { sph.x = -1.0+2.0*iMouse.x/iResolution.x;\n                         sph.y =      4.0*iMouse.y/iResolution.y; }\n    \n    vec3 lig = normalize( vec3(0.6,0.3,0.4) );\n    vec3 col = vec3(0.0);\n\n    float tmin = 1e10;\n    vec3 nor;\n    float occ = 1.0;\n    \n    float t1 = iPlane( ro, rd );\n    if( t1>0.0 )\n    {\n        tmin = t1;\n        vec3 pos = ro + t1*rd;\n        nor = vec3(0.0,1.0,0.0);\n        occ = 1.0-sphOcclusion( pos, nor, sph );\n    }\n#if 1\n    float t2 = sphIntersect( ro, rd, sph );\n    if( t2>0.0 && t2<tmin )\n    {\n        tmin = t2;\n        vec3 pos = ro + t2*rd;\n        nor = sphNormal( pos, sph );\n        occ = 0.5 + 0.5*nor.y;\n\t}\n#endif \n    if( tmin<1000.0 )\n    {\n        vec3 pos = ro + tmin*rd;\n        \n\t\tcol = vec3(1.0);\n        col *= clamp( dot(nor,lig), 0.0, 1.0 );\n        col *= sphSoftShadow( pos, lig, sph, 2.0 );\n        col += 0.05*occ;\n\t    col *= exp( -0.05*tmin );\n    }\n\n    col = sqrt(col);\n    fragColor = vec4( col, 1.0 );\n}\nvoid main() {\n    mainImage(gl_FragColor, gl_FragCoord.xy);\n}\n";const s={category:"Experiment",name:"ShadowShade",buttonContent:"查看源码",title:"阴影",content:"ShadowShade"},c=new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]);var p={name:"SpotLight",data(){return{gl:null,desData:s,vertexShaderSource:i,fragmentShaderSource:a,page:null,uiSetter:[]}},methods:{Init(){this.page=this.$refs.page,this.gl=this.page.getGL(),this.canvas=this.page.getCanvas(),this.program=this.page.getProgram(),this.page.addBuffer("position",{numComponents:2,data:c})},Render(){const n=[this.page.getMousePosition().x,this.page.getMousePosition().y],e=[this.gl.canvas.width,this.gl.canvas.height],o=this.page.getTime();this.page.addUniform("iResolution",e),this.page.addUniform("iMouse",n),this.page.addUniform("iTime",o)}}},h=o(89);const l=(0,h.Z)(p,[["render",r]]);var d=l}}]);
//# sourceMappingURL=324.0c10f28e.js.map