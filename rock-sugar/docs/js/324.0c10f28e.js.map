{"version":3,"file":"js/324.0c10f28e.js","mappings":"0QACIA,EAAAA,EAAAA,IAQEC,EAAA,CAPGC,cAAeC,EAAAA,QACfC,eAAgBD,EAAAA,SAChBE,mBAAoBF,EAAAA,mBACpBG,qBAAsBH,EAAAA,qBACvBI,IAAI,OACHC,OAAMC,EAAAA,KACNC,SAAQD,EAAAA,QAPb,0G,6BCDJ,EACC,kFCDD,EACC,2qFFcD,MAAME,EAAU,CACZC,SAAS,aACTC,KAAK,cACLC,cAAc,OACdC,MAAM,KACNC,QAAQ,eAINC,EAAY,IAAIC,aAClB,EACC,GAAI,EACJ,GAAI,GACJ,EAAI,GACJ,EAAI,EACJ,GAAI,EACJ,EAAI,IAKT,OACIL,KAAK,YACLM,OACI,MAAO,CACHC,GAAI,KACJT,UACAU,mBAHG,EAIHC,qBAJG,EAKHC,KAAK,KACLC,SAAS,GAEhB,EACDC,QAAS,CACLC,OACIC,KAAKJ,KAAOI,KAAKC,MAAML,KACvBI,KAAKP,GAAKO,KAAKJ,KAAKM,QACpBF,KAAKG,OAASH,KAAKJ,KAAKQ,YACxBJ,KAAKK,QAAUL,KAAKJ,KAAKU,aAEzBN,KAAKJ,KAAKW,UAAU,WAAW,CAACC,cAAc,EAAEhB,KAAKF,GAExD,EACDmB,SACI,MAAMC,EAAgB,CAACV,KAAKJ,KAAKe,mBAAmBC,EAAEZ,KAAKJ,KAAKe,mBAAmBE,GAC7EC,EAAa,CAACd,KAAKP,GAAGU,OAAOY,MAAMf,KAAKP,GAAGU,OAAOa,QAClDC,EAAOjB,KAAKJ,KAAKsB,UACvBlB,KAAKJ,KAAKuB,WAAW,cAAcL,GACnCd,KAAKJ,KAAKuB,WAAW,SAAST,GAC9BV,KAAKJ,KAAKuB,WAAW,QAAQF,EAChC,I,QG5DT,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://rock-sugar/./src/pages/CG/Experiment/ShadowShade/index.vue","webpack://rock-sugar/./src/pages/CG/Experiment/ShadowShade/resource/vertex-shader.js","webpack://rock-sugar/./src/pages/CG/Experiment/ShadowShade/resource/fragment-shader.js","webpack://rock-sugar/./src/pages/CG/Experiment/ShadowShade/index.vue?a127"],"sourcesContent":["<template lang=\"html\">\r\n    <nano_shader_toy_renderer_page\r\n        :prop_des_data=\"desData\"\r\n        :prop_ui_setter=\"uiSetter\"\r\n        :prop_vertex_shader=\"vertexShaderSource\"\r\n        :prop_fragment_shader=\"fragmentShaderSource\"\r\n        ref=\"page\"\r\n        @Init=\"Init\"\r\n        @Render=\"Render\"\r\n    />\r\n</template>\r\n<script>\r\nimport vertexShaderSource from './resource/vertex-shader'\r\nimport fragmentShaderSource from './resource/fragment-shader'\r\n\r\nconst desData = {\r\n    category:\"Experiment\",\r\n    name:\"ShadowShade\",\r\n    buttonContent:\"查看源码\",\r\n    title:\"阴影\",\r\n    content:\"ShadowShade\"\r\n}\r\n\r\n\r\nconst positions = new Float32Array(\r\n    [\r\n    -1, -1,  \r\n     1, -1,\r\n    -1,  1,\r\n    -1,  1, \r\n     1, -1,\r\n     1,  1,\r\n]\r\n\r\n)\r\n\r\nexport default {\r\n    name:'SpotLight',\r\n    data() {\r\n        return {\r\n            gl: null,\r\n            desData,\r\n            vertexShaderSource,\r\n            fragmentShaderSource,\r\n            page:null,\r\n            uiSetter:[],\r\n        }\r\n    },\r\n    methods: {\r\n        Init(){\r\n            this.page = this.$refs.page;\r\n            this.gl = this.page.getGL();\r\n            this.canvas = this.page.getCanvas();\r\n            this.program = this.page.getProgram();\r\n            //Get bufferinfo and setters.\r\n            this.page.addBuffer(\"position\",{numComponents:2,data:positions});\r\n\r\n        },\r\n        Render(){\r\n            const mousePosition = [this.page.getMousePosition().x,this.page.getMousePosition().y];\r\n            const canvasRect = [this.gl.canvas.width,this.gl.canvas.height]\r\n            const time = this.page.getTime();\r\n            this.page.addUniform(\"iResolution\",canvasRect);\r\n            this.page.addUniform(\"iMouse\",mousePosition);\r\n            this.page.addUniform(\"iTime\",time);\r\n        },\r\n\r\n    }\r\n}\r\n\r\n</script>","export default \r\n`\r\nattribute vec4 a_position;\r\n\r\nvoid main() {\r\n  gl_Position = a_position;\r\n}\r\n`\r\n\r\n","export default\r\n`\r\nprecision highp float;\r\n\r\nuniform vec2 iResolution;\r\nuniform vec2 iMouse;\r\nuniform float iTime;\r\n\r\nfloat sphIntersect( in vec3 ro, in vec3 rd, in vec4 sph )\r\n{\r\n\tvec3 oc = ro - sph.xyz;\r\n\tfloat b = dot( oc, rd );\r\n\tfloat c = dot( oc, oc ) - sph.w*sph.w;\r\n\tfloat h = b*b - c;\r\n\tif( h<0.0 ) return -1.0;\r\n\treturn -b - sqrt( h );\r\n}\r\n\r\n\r\nfloat sphSoftShadow( in vec3 ro, in vec3 rd, in vec4 sph, in float k )\r\n{\r\n    vec3 oc = ro - sph.xyz;\r\n    float b = dot( oc, rd );\r\n    float c = dot( oc, oc ) - sph.w*sph.w;\r\n    float h = b*b - c;\r\n    \r\n#if 0\r\n    // physically plausible shadow\r\n    float d = sqrt( max(0.0,sph.w*sph.w-h)) - sph.w;\r\n    float t = -b - sqrt( max(h,0.0) );\r\n    return (t<0.0) ? 1.0 : smoothstep(0.0, 1.0, 2.5*k*d/t );\r\n#else\r\n    // cheap but not plausible alternative\r\n    return (b>0.0) ? step(-0.0001,c) : smoothstep( 0.0, 1.0, h*k/b );\r\n#endif    \r\n}    \r\n            \r\nfloat sphOcclusion( in vec3 pos, in vec3 nor, in vec4 sph )\r\n{\r\n    vec3  r = sph.xyz - pos;\r\n    float l = length(r);\r\n    return dot(nor,r)*(sph.w*sph.w)/(l*l*l);\r\n}\r\n\r\nvec3 sphNormal( in vec3 pos, in vec4 sph )\r\n{\r\n    return normalize(pos-sph.xyz);\r\n}\r\n\r\n//=====================================================\r\n\r\nfloat iPlane( in vec3 ro, in vec3 rd )\r\n{\r\n    return (-1.0 - ro.y)/rd.y;\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\tvec2 p = (2.0*fragCoord.xy-iResolution.xy) / iResolution.y;\r\n    \r\n\tvec3 ro = vec3(0.0, 0.0, 4.0 );\r\n\tvec3 rd = normalize( vec3(p,-2.0) );\r\n\t\r\n    // sphere animation\r\n    vec4 sph = vec4( cos( iTime + vec3(2.0,1.0,1.0) + 0.0 )*vec3(1.5,0.0,1.0), 1.0 );\r\n\r\n    if( iMouse.y>0.0 ) { sph.x = -1.0+2.0*iMouse.x/iResolution.x;\r\n                         sph.y =      4.0*iMouse.y/iResolution.y; }\r\n    \r\n    vec3 lig = normalize( vec3(0.6,0.3,0.4) );\r\n    vec3 col = vec3(0.0);\r\n\r\n    float tmin = 1e10;\r\n    vec3 nor;\r\n    float occ = 1.0;\r\n    \r\n    float t1 = iPlane( ro, rd );\r\n    if( t1>0.0 )\r\n    {\r\n        tmin = t1;\r\n        vec3 pos = ro + t1*rd;\r\n        nor = vec3(0.0,1.0,0.0);\r\n        occ = 1.0-sphOcclusion( pos, nor, sph );\r\n    }\r\n#if 1\r\n    float t2 = sphIntersect( ro, rd, sph );\r\n    if( t2>0.0 && t2<tmin )\r\n    {\r\n        tmin = t2;\r\n        vec3 pos = ro + t2*rd;\r\n        nor = sphNormal( pos, sph );\r\n        occ = 0.5 + 0.5*nor.y;\r\n\t}\r\n#endif \r\n    if( tmin<1000.0 )\r\n    {\r\n        vec3 pos = ro + tmin*rd;\r\n        \r\n\t\tcol = vec3(1.0);\r\n        col *= clamp( dot(nor,lig), 0.0, 1.0 );\r\n        col *= sphSoftShadow( pos, lig, sph, 2.0 );\r\n        col += 0.05*occ;\r\n\t    col *= exp( -0.05*tmin );\r\n    }\r\n\r\n    col = sqrt(col);\r\n    fragColor = vec4( col, 1.0 );\r\n}\r\nvoid main() {\r\n    mainImage(gl_FragColor, gl_FragCoord.xy);\r\n}\r\n`","import { render } from \"./index.vue?vue&type=template&id=5c5def4e&lang=html\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"F:\\\\Note-Haruluya\\\\Project\\\\Rock-sugar\\\\rock-sugar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_nano_shader_toy_renderer_page","prop_des_data","$data","prop_ui_setter","prop_vertex_shader","prop_fragment_shader","ref","onInit","$options","onRender","desData","category","name","buttonContent","title","content","positions","Float32Array","data","gl","vertexShaderSource","fragmentShaderSource","page","uiSetter","methods","Init","this","$refs","getGL","canvas","getCanvas","program","getProgram","addBuffer","numComponents","Render","mousePosition","getMousePosition","x","y","canvasRect","width","height","time","getTime","addUniform","__exports__","render"],"sourceRoot":""}