{"version":3,"file":"js/208.83ed92d8.js","mappings":"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","sources":["webpack://rock-sugar/./src/pages/CG/Experiment/Interfaces/Polygon.js","webpack://rock-sugar/./src/pages/CG/Experiment/EdgeTablePolygonFlag/index.vue","webpack://rock-sugar/./src/pages/CG/Experiment/EdgeTablePolygonFlag/index.vue?1160"],"sourcesContent":["/*\r\n    @author:haruluya\r\n    @des:The obstraction of polygon\r\n    @params:{\r\n        points:the points of polygon.\r\n    }\r\n*/\r\nclass Polygon{\r\n    constructor(points){\r\n        this.points = points\r\n        this.points.forEach((e,i)=>{\r\n            this[i] = e;\r\n        })\r\n    }\r\n    maxPointX(){\r\n        let max = 0;\r\n        this.points.forEach(element => {\r\n            max = max > element.x ? max : element.x;\r\n        });\r\n        return max;\r\n    }\r\n    minPointX(){\r\n        let min = this.maxPointX();\r\n        this.points.forEach(element =>{\r\n            min = min < element.x ? min : element.x;\r\n        })\r\n        return min;\r\n    }\r\n    maxPointY(){\r\n        let max = 0;\r\n        this.points.forEach(element => {\r\n            max = max > element.y ? max : element.y;\r\n        });\r\n        return max;\r\n    }\r\n    minPointY(){\r\n        let min = this.maxPointX();\r\n        this.points.forEach(element =>{\r\n            min = min < element.y ? min : element.y;\r\n        })\r\n        return min;\r\n    }\r\n    size(){\r\n        return this.points.length;\r\n    }\r\n    indexValue(index){\r\n        return this.points[index];\r\n    }\r\n    isInPolygon(point){\r\n        let i, j;\r\n        let c = false;\r\n        for (i=0, j=this.size()-1; i<this.size(); j=i++)\r\n        {\r\n            if(((this.points[i].y>point.y) != (this.points[j].y>point.y)) &&\r\n                (point.x<(this.points[j].x-this.points[i].x) *\r\n                (point.y-this.points[i].y) / (this.points[j].y-this.points[i].y) + this.points[i].x))\r\n            c = !c;\r\n        }\r\n        return c;\r\n    }\r\n}\r\nexport default Polygon;","<template lang=\"html\">\r\n    <nano_cg_experiment_page :prop_des_data=\"desData\" :prop_ui_setter=\"uiSetter\" :prop_section_params=\"sectionParams\"\r\n        ref=\"page\" />\r\n</template>\r\n<script>\r\n\r\n\r\n\r\nimport uiSetting from \"../ui-setting\"\r\nimport { Edge, Polygon } from \"../Interfaces\"\r\n\r\n\r\nconst desData = {\r\n    category: \"Experiment\",\r\n    name: \"EdgeTablePolygonFlag\",\r\n    buttonContent: \"查看源码\",\r\n    title: \"边标志填充算法\",\r\n    content: \"Edge table polygon Flag.\"\r\n}\r\n\r\n\r\n/*\r\n    @author:haruluya\r\n    @des: Ex07 EdgeTablePolygon.\r\n*/\r\n\r\nexport default {\r\n    name: \"EdgeTablePolygon\",\r\n    data() {\r\n        return {\r\n            canvas: null,\r\n            ctx: null,\r\n            // component data.\r\n            desData,\r\n            // params of page.\r\n            sectionParams: {\r\n                points: [{ x: 20, y: 20 }, { x: 20, y: 70 }, { x: 50, y: 50 }, { x: 110, y: 60 }, { x: 110, y: 30 }, { x: 50, y: 10 }],\r\n                // points:[{x:125,y:125},{x:250,y:43},{x:0,y:43}],\r\n                color:'#0bc6e3',\r\n                debugContent: null,\r\n                girdSize: 3,\r\n                screenTransform:{x:0,y:0,scale:100}\r\n            }\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        //uiSetter.\r\n        uiSetter() {\r\n            let sectionParams = this.sectionParams;\r\n            let setter = [\r\n                {\r\n                    type: \"slider\", id: \"girdSize\", value: sectionParams.girdSize, min: 1, max: 100,\r\n                    callback: uiSetting.globalUiCallbacks.updateValue(this, \"girdSize\")\r\n                },\r\n                { type: \"color\",id: \"color\",default: sectionParams.color, callback: uiSetting.globalUiCallbacks.updateValue(this, \"color\")}\r\n            ];\r\n            for (let i= 0; i < this.sectionParams.points.length; i++){\r\n                setter.push(\r\n                 { type: \"slider-vector\", id: \"point\"+i , value: sectionParams.points[i], min: { x: 0, y: 0 }, max: { x: 500, y: 500 }, callback: uiSetting.globalUiCallbacks.updatePointArray(this, \"points\", i) },\r\n                )\r\n            }\r\n            return setter;\r\n        },\r\n\r\n    },\r\n    methods: {\r\n        Init() {\r\n            this.$refs.page.Init();\r\n\r\n            this.canvas = this.$refs.page.getCanvas();\r\n            this.ctx = canvas.getContext('2d');\r\n            this.$refs.page.setViewer(this.sectionParams.screenTransform,this.Render);\r\n\r\n            this.Render();\r\n        },\r\n        Render() {\r\n            this.$refs.page.Render();\r\n\r\n            const ctx = this.ctx;\r\n            const gridx = parseInt(this.canvas.width / this.sectionParams.girdSize) - 1;\r\n            const gridy = parseInt(this.canvas.height / this.sectionParams.girdSize) - 1;\r\n\r\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n            this.sectionParams.girdSize += this.$refs.page.girdSize;\r\n            uiSetting.drawGrid(this);\r\n           \r\n            if(this.sectionParams.girdSize  <= 0) {\r\n                    this.sectionParams.girdSize = 1\r\n            }\r\n            this.sectionParams.debugContent = [{\r\n                title: \"grid\", content: \"The number of cells in the x direction: \" + gridx + \"\\nThe number of cells in the y direction: \" + gridy,\r\n            }];\r\n\r\n            //showPolygonInEdgeFlag.\r\n            const points = new Polygon(this.sectionParams.points);\r\n            if(points.size()<3)\r\n                return;\r\n\r\n            //获取多边形最小包围盒\r\n            let minx, maxx, miny, maxy;\r\n            minx = points.minPointX();\r\n            maxx = points.maxPointX();\r\n            miny = points.minPointY();\r\n            maxy = points.maxPointY();\r\n\r\n            //设置一个标志矩阵\r\n            let m = maxy - miny;\r\n            let n = maxx - minx;\r\n            let MF = [];\r\n            let i,j;\r\n            for(i=0; i<m; i++)\r\n                for(j=0; j<n; j++)\r\n                    MF[i*n+j] = false;\r\n\r\n            //对于多边形每一条边，从这条边向右直到包围盒右边界进行扫描\r\n            let p0, p1, temp;\r\n            let dx, tx;\r\n            let x;\r\n            let k;\r\n            let vertics = points.size();\r\n\r\n            for(k=0; k<vertics; k++)\r\n            {\r\n                //获取一条边p0p1\r\n                if(k == vertics-1)\r\n                {\r\n                    p0 = points[k];\r\n                    p1 = points[0];\r\n                }\r\n                else\r\n                {\r\n                    p0 = points[k];\r\n                    p1 = points[k+1];\r\n                }\r\n\r\n                if(p0.y>p1.y)//将p0设为边的起点坐标，y坐标较小\r\n                {\r\n                    temp = p0;\r\n                    p0 = p1;\r\n                    p1 = temp;\r\n                }\r\n\r\n                //对于一条边，从左至右对标志位求反\r\n                if(p0.y != p1.y)//非水平边\r\n                {\r\n                    dx = (p1.x-p0.x)/(p1.y-p0.y);\r\n                    //对于一条边，y每次递增1,x每次递增dx\r\n                    x = p0.x;\r\n                    tx = x;\r\n                    for(i=p0.y; i<p1.y; i++)\r\n                    {\r\n                        x = Math.floor(tx);\r\n                        for(j=x; j<maxx; j++)\r\n                            MF[(i-miny)*n+j-minx] = !MF[(i-miny)*n + j-minx];\r\n                        tx = tx+dx;\r\n                    }\r\n                }\r\n            }\r\n            //对整个包围盒扫描，为true，用前景色绘制\r\n            for(i=0; i<m; i++)\r\n                for(j=0; j<n; j++)\r\n                    if(MF[i*n+j])\r\n                        uiSetting.drawPointInGrid(this, j+minx, i+miny , this.sectionParams.color);\r\n         \r\n        },\r\n        SetUI() {\r\n            this.$refs.page.SetUI();\r\n        },\r\n\r\n\r\n    },\r\n    mounted() {\r\n        this.Init();\r\n        this.SetUI();\r\n    },\r\n\r\n};\r\n\r\n</script>\r\n","import { render } from \"./index.vue?vue&type=template&id=9f909b16&lang=html\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"F:\\\\Note-Haruluya\\\\Project\\\\Rock-sugar\\\\rock-sugar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["Polygon","constructor","points","this","forEach","e","i","maxPointX","max","element","x","minPointX","min","maxPointY","y","minPointY","size","length","indexValue","index","isInPolygon","point","j","c","_createBlock","_component_nano_cg_experiment_page","prop_des_data","$data","prop_ui_setter","$options","prop_section_params","ref","desData","category","name","buttonContent","title","content","data","canvas","ctx","sectionParams","color","debugContent","girdSize","screenTransform","scale","computed","uiSetter","setter","type","id","value","callback","uiSetting","default","push","methods","Init","$refs","page","getCanvas","getContext","setViewer","Render","gridx","parseInt","width","gridy","height","clearRect","minx","maxx","miny","maxy","p0","p1","temp","dx","tx","k","m","n","MF","vertics","Math","floor","SetUI","mounted","__exports__","render"],"sourceRoot":""}