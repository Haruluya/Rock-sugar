"use strict";(self["webpackChunkrock_sugar"]=self["webpackChunkrock_sugar"]||[]).push([[302],{1531:function(e,t,r){r.r(t),r.d(t,{default:function(){return T}});var n=r(3396);function a(e,t,r,a,i,o){const s=(0,n.up)("nano_webgl_demo_panel");return(0,n.wg)(),(0,n.j4)(s,{prop_des_data:i.desData,prop_ui_setter:i.uiSetter,prop_section_params:i.sectionParams,prop_vertex_shader:i.vertexShaderSource,prop_fragment_shader:i.fragmentShaderSource,ref:"page",onInit:o.Init,onRender:o.Render,onProp_ui_setter:i.uiSetter},null,8,["prop_des_data","prop_ui_setter","prop_section_params","prop_vertex_shader","prop_fragment_shader","onInit","onRender","onProp_ui_setter"])}var i="\nattribute vec4 a_position;\nattribute vec3 a_normal;\n\nuniform mat4 u_projection;\nuniform mat4 u_view;\nuniform mat4 u_world;\n\nvarying vec3 v_worldPosition;\nvarying vec3 v_worldNormal;\n\nvoid main() {\n  // Multiply the position by the matrix.\n  gl_Position = u_projection * u_view * u_world * a_position;\n\n  // send the view position to the fragment shader\n  v_worldPosition = (u_world * a_position).xyz;\n\n  // orient the normals and pass to the fragment shader\n  v_worldNormal = mat3(u_world) * a_normal;\n}\n",o="\nprecision highp float;\n\n// Passed in from the vertex shader.\nvarying vec3 v_worldPosition;\nvarying vec3 v_worldNormal;\n\n// The texture.\nuniform samplerCube u_texture;\n\n// The position of the camera\nuniform vec3 u_worldCameraPosition;\n\nvoid main() {\n  vec3 worldNormal = normalize(v_worldNormal);\n  vec3 eyeToSurfaceDir = normalize(v_worldPosition - u_worldCameraPosition);\n  vec3 direction = reflect(eyeToSurfaceDir,worldNormal);\n\n  gl_FragColor = textureCube(u_texture, direction);\n}\n",s=r.p+"img/neg-x.746971dc.jpg",p=r.p+"img/neg-y.32a85480.jpg",_=r.p+"img/neg-z.63888711.jpg",g=r.p+"img/pos-x.79de27a8.jpg",d=r.p+"img/pos-y.c955233d.jpg",u=r.p+"img/pos-z.8a03b1ff.jpg",l=(r(8675),r(3408),r(4590),{position:new Float32Array([-.5,-.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,.5,-.5,.5,.5,-.5,.5,-.5,-.5,-.5,-.5,.5,.5,-.5,.5,-.5,.5,.5,-.5,.5,.5,.5,-.5,.5,.5,.5,.5,-.5,.5,-.5,-.5,.5,.5,.5,.5,-.5,-.5,.5,.5,.5,.5,.5,.5,.5,-.5,-.5,-.5,-.5,.5,-.5,-.5,-.5,-.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,.5,-.5,.5,.5,-.5,.5,-.5,.5,-.5,-.5,.5,.5,-.5,.5,-.5,.5,.5,-.5,.5,.5,.5,-.5,.5,.5,.5]),normal:new Float32Array([0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0])});r(720);const m={category:"Webgl",name:"EnvMapping",buttonContent:"查看源码",title:"环境贴图",content:"Environment mapping."},c=l.position,h=l.normal;var E={name:"SpotLight",data(){return{gl:null,desData:m,program:null,vertexShaderSource:i,fragmentShaderSource:o,perspective:{aspect:0,fieldOfViewRadians:HNWUEngine.degToRad(60),zNear:1,zFar:2e3},transform:{translation:[0,0,-0],rotation:[HNWUEngine.degToRad(180),HNWUEngine.degToRad(200),HNWUEngine.degToRad(0)],scale:[1,1,1]},camera:{target:[0,0,0],position:[0,0,2],up:[0,1,0]},sectionParams:{texture:null},page:null,uiSetter:[]}},methods:{Init(){this.page=this.$refs.page,this.gl=this.page.getGL();const e=this.gl;this.program=this.page.getProgram(),this.perspective.aspect=this.gl.canvas.clientWidth/this.gl.canvas.clientHeight,this.$refs.page.setTransform(this.transform),this.page.addBuffer("position",{numComponents:3,data:c}),this.page.addBuffer("normal",{numComponents:3,data:h}),this.sectionParams.texture=e.createTexture(),e.bindTexture(e.TEXTURE_CUBE_MAP,this.sectionParams.texture),this.faceInfos(e).forEach(((t,r)=>{const{target:n,url:a}=t,i=0,o=e.RGBA,s=e.RGBA,p=e.UNSIGNED_BYTE,_=new Image;_.src=a,_.addEventListener("load",(()=>{e.bindTexture(e.TEXTURE_CUBE_MAP,this.sectionParams.texture),e.texImage2D(n,i,o,s,p,_),e.generateMipmap(e.TEXTURE_CUBE_MAP),5===r&&this.page.Render()}))}))},Render(){const e=this.gl;e.enable(e.CULL_FACE),e.enable(e.DEPTH_TEST);let t=HNWUEngine.lookAt(this.camera.position,this.camera.target,this.camera.up),r=HNWUEngine.inverse(t),n=HNWUEngine.perspective(this.perspective.fieldOfViewRadians,this.perspective.aspect,this.perspective.zNear,this.perspective.zFar),a=HNWUEngine.getTransformMatrix(HNWUEngine.xRotation(0),this.transform);this.page.addUniform("u_projection",n),this.page.addUniform("u_view",r),this.page.addUniform("u_world",a),this.page.addUniform("u_worldCameraPosition",this.camera.position),this.page.addUniform("u_texture",this.sectionParams.texture),this.$refs.page.glDraw({mode:e.TRIANGLES,first:0,count:36})},faceInfos(e){return[{target:e.TEXTURE_CUBE_MAP_POSITIVE_X,url:s},{target:e.TEXTURE_CUBE_MAP_NEGATIVE_X,url:p},{target:e.TEXTURE_CUBE_MAP_POSITIVE_Y,url:_},{target:e.TEXTURE_CUBE_MAP_NEGATIVE_Y,url:g},{target:e.TEXTURE_CUBE_MAP_POSITIVE_Z,url:d},{target:e.TEXTURE_CUBE_MAP_NEGATIVE_Z,url:u}]}}},f=r(89);const v=(0,f.Z)(E,[["render",a]]);var T=v}}]);
//# sourceMappingURL=302.1b383f68.js.map