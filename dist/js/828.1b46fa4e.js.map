{"version":3,"file":"js/828.1b46fa4e.js","mappings":"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","sources":["webpack://rock-sugar/./src/pages/CG/Experiment/3DHouse/index.vue","webpack://rock-sugar/./src/pages/CG/Experiment/3DHouse/index.vue?647d"],"sourcesContent":["<template lang=\"html\">\r\n    <nano_cg_experiment_page :prop_des_data=\"desData\" :prop_ui_setter=\"uiSetter\" :prop_section_params=\"sectionParams\"\r\n        ref=\"page\" />\r\n</template>\r\n<script>\r\n\r\nimport uiSetting from \"../ui-setting\"\r\nimport { Point,Polygon,Rect,Line, InPoint} from \"../Interfaces\"\r\n\r\nconst desData = {\r\n    category: \"Experiment\",\r\n    name: \"3DHouse\",\r\n    buttonContent: \"查看源码\",\r\n    title: \"3DHouse\",\r\n    content: \"3DHouse.\"\r\n}\r\n\r\n/*\r\n    @author:haruluya\r\n    @des: Ex14 3DHouse.\r\n*/\r\n\r\nexport default {\r\n    name: \"3DHouse\",\r\n    data() {\r\n        return {\r\n            canvas: null,\r\n            ctx: null,\r\n            // component data.\r\n            desData,\r\n            // params of page.\r\n            sectionParams: {\r\n                nProjectionType : 0,// 投影类型, 0:透视投影 1:平行投影\r\n                VRP : [0,0,0], //视平面参考点(相对于世界坐标系)\r\n                Theta : .0, //视图参考坐标系与z轴的偏角\r\n                Phi : 0, //视图参考坐标系与y轴的偏角\r\n                Delta : 0, //视图参考坐标系与x轴的偏角\r\n                PRP : [250,100,250], //投影参考点(相对于视图参考坐标系)\r\n                CW : [0,0], //窗口中心点(相对于视图参考坐标系)\r\n\r\n                wcHouse : [],// 世界坐标系中的房屋坐标，原始数据\r\n                vcHouse : [], //视图参考坐标系中的房屋坐标\r\n                scHouse : [], //屏幕坐标系中的房屋坐标\r\n                lPRP : [], //布局图所用的投影参考点\r\n                lwcWC : [], //布局图中的世界坐标系(相对于世界坐标系)\r\n                lscWC : [], //布局图中的世界坐标系(相对于屏幕坐标系)\r\n                lwcVRC : [], //布局图中的视图参考坐标系(相对于世界坐标系)\r\n                lvcVRC : [],\r\n                lscVRC : [], //布局图中的视图参考坐标系(相对于世界坐标系)\r\n                lwcPRP : [], //布局图中的投影参考点(相对于世界坐标系)\r\n                lvcPRP : [],\r\n                lscPRP : [], //布局图中的投影参考点(相对于世界坐标系)\r\n                MT : [], //三维变换矩阵\r\n                MP : [], //投影变换矩阵\r\n                debugContent: null,\r\n                girdSize: 2,\r\n                color:\"#000000\",\r\n                screenTransform:{x:50,y:120,scale:100},\r\n                showModel:0,\r\n            }\r\n        };\r\n    },\r\n    computed: {\r\n        //uiSetter.\r\n        uiSetter() {\r\n            let sectionParams = this.sectionParams;\r\n            let setter = [\r\n                {\r\n                    type: \"slider\", id: \"girdSize\", value: sectionParams.girdSize, min: 1, max: 100,\r\n                    callback: uiSetting.globalUiCallbacks.updateValue(this, \"girdSize\")\r\n                },\r\n                {\r\n                    type: \"slider\", id: \"showProjectionView\", value: sectionParams.showModel, min: 0, max: 1,\r\n                    callback: uiSetting.globalUiCallbacks.updateValue(this, \"showModel\")\r\n                },\r\n                {\r\n                    type: \"slider\", id: \"Theta\", value: sectionParams.Theta, min: 0, max: 360,\r\n                    callback: uiSetting.globalUiCallbacks.updateValue(this, \"Theta\")\r\n                },\r\n                {\r\n                    type: \"slider\", id: \"Phi\", value: sectionParams.Phi, min: 0, max: 360,\r\n                    callback: uiSetting.globalUiCallbacks.updateValue(this, \"Phi\")\r\n                },\r\n                {\r\n                    type: \"slider\", id: \"Delta\", value: sectionParams.Delta, min: 0, max: 360,\r\n                    callback: uiSetting.globalUiCallbacks.updateValue(this, \"Delta\")\r\n                },\r\n                { type: \"color\",id: \"color\",default: sectionParams.color, \r\n                    callback: uiSetting.globalUiCallbacks.updateValue(this, \"color\")},\r\n                { type: \"slider-vector\", id: \"PRP\" , value: sectionParams.PRP, min: { 0: 0, 1: 0,2:0 }, max: { 0: 500, 1: 500 ,2:500}, \r\n                callback: uiSetting.globalUiCallbacks.updatePoint(this, \"PRP\") },\r\n                { type: \"slider-vector\", id: \"VRP\" , value: sectionParams.VRP, min: { 0: 0, 1: 0,2:0 }, max: { 0: 500, 1: 500 ,2:500}, \r\n                callback: uiSetting.globalUiCallbacks.updatePoint(this, \"VRP\") },\r\n               \r\n            ];\r\n\r\n            return setter;\r\n        },\r\n    },\r\n    mounted() {\r\n        this.Init();\r\n        this.SetUI();\r\n    },\r\n    methods: {\r\n        Init() {\r\n            this.$refs.page.Init();\r\n            \r\n            this.canvas = this.$refs.page.getCanvas();\r\n            this.ctx = canvas.getContext('2d');\r\n            this.$refs.page.setViewer(this.sectionParams.screenTransform,this.Render);\r\n\r\n            //init data;\r\n            let i = 0, j = 0;\r\n            //push array.\r\n            for(let t = 0; t < 14; t++){\r\n                this.sectionParams.wcHouse.push([]);\r\n                this.sectionParams.vcHouse.push([]);\r\n                this.sectionParams.scHouse.push([]);\r\n            }\r\n            for(let t = 0; t < 4; t++){\r\n                this.sectionParams.lwcWC.push([]);\r\n                this.sectionParams.lscWC.push([]);\r\n                this.sectionParams.lwcVRC.push([]);\r\n                this.sectionParams.lvcVRC.push([]);\r\n                this.sectionParams.lscVRC.push([]);\r\n                this.sectionParams.MT.push([]);\r\n                this.sectionParams.MP.push([]);\r\n            }\r\n            for(let t = 0; t < 2; t++){\r\n                this.sectionParams.lwcPRP.push([]);\r\n                this.sectionParams.lvcPRP.push([]);\r\n                this.sectionParams.lscPRP.push([]);\r\n            }\r\n\r\n            //初始化房屋数据\r\n            this.sectionParams.wcHouse[0][0] = 20.0; this.sectionParams.wcHouse[0][1] = 0.0; this.sectionParams.wcHouse[0][2] = 0.0;\r\n            this.sectionParams.wcHouse[1][0] = 20.0; this.sectionParams.wcHouse[1][1] = 0.0; this.sectionParams.wcHouse[1][2] = 8.0;\r\n            this.sectionParams.wcHouse[2][0] = 20.0; this.sectionParams.wcHouse[2][1] = 6.0; this.sectionParams.wcHouse[2][2] = 8.0;\r\n            this.sectionParams.wcHouse[3][0] = 20.0; this.sectionParams.wcHouse[3][1] = 9.0; this.sectionParams.wcHouse[3][2] = 4.0;\r\n            this.sectionParams.wcHouse[4][0] = 20.0; this.sectionParams.wcHouse[4][1] = 6.0; this.sectionParams.wcHouse[4][2] = 0.0;\r\n            this.sectionParams.wcHouse[5][0] = 28.0; this.sectionParams.wcHouse[5][1] = 4.0; this.sectionParams.wcHouse[5][2] = 8.0;\r\n            this.sectionParams.wcHouse[6][0] = 28.0; this.sectionParams.wcHouse[6][1] = 0.0; this.sectionParams.wcHouse[6][2] = 8.0;\r\n            for (i = 7; i<14; i++)\r\n            {\r\n                this.sectionParams.wcHouse[i][0] = this.sectionParams.wcHouse[i - 7][0] + 20;\r\n                this.sectionParams.wcHouse[i][1] = this.sectionParams.wcHouse[i - 7][1];\r\n                this.sectionParams.wcHouse[i][2] = this.sectionParams.wcHouse[i - 7][2];\r\n                this.sectionParams.wcHouse[i][3] = 1.0;\r\n            }\r\n            this.sectionParams.wcHouse[12][0] = this.sectionParams.wcHouse[5][0] + 4;\r\n            this.sectionParams.wcHouse[13][0] = this.sectionParams.wcHouse[6][0] + 4;\r\n            //调整房屋大小\r\n            let nScale = 5; //缩放比例\r\n            for (i = 0; i<14; i++)\r\n            {\r\n                this.sectionParams.wcHouse[i][0] = nScale * this.sectionParams.wcHouse[i][0];\r\n                this.sectionParams.wcHouse[i][1] = nScale * this.sectionParams.wcHouse[i][1];\r\n                this.sectionParams.wcHouse[i][2] = nScale * this.sectionParams.wcHouse[i][2];\r\n            }\r\n            //初始化世界坐标系\r\n            for (i = 0; i<4; i++)\r\n                for (j = 0; j<3; j++)\r\n                    this.sectionParams.lwcWC[i][j] = 0.0;\r\n            this.sectionParams.lwcWC[0][0] = 300;\r\n            this.sectionParams.lwcWC[1][1] = 100;\r\n            this.sectionParams.lwcWC[2][2] = 100;\r\n\r\n            //初始化视图参考坐标系\r\n            for (i = 0; i<4; i++)\r\n                for (j = 0; j<3; j++)\r\n                    this.sectionParams.lwcVRC[i][j] = 0.0;\r\n            this.sectionParams.lwcVRC[0][0] = 30;\r\n            this.sectionParams.lwcVRC[1][1] = 30;\r\n            this.sectionParams.lwcVRC[2][2] = 30;\r\n            this.sectionParams.lPRP[0] = 3000.0;\r\n            this.sectionParams.lPRP[1] = 1000.0;\r\n            this.sectionParams.lPRP[2] = 6000.0;\r\n\r\n\r\n\r\n\r\n            this.Render();\r\n        },\r\n        Render() {\r\n            this.$refs.page.Render();\r\n           \r\n            const ctx = this.ctx;\r\n            const gridx = parseInt(this.canvas.width / this.sectionParams.girdSize) - 1;\r\n            const gridy = parseInt(this.canvas.height / this.sectionParams.girdSize) - 1;\r\n\r\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            this.sectionParams.girdSize += this.$refs.page.girdSize;\r\n            uiSetting.drawGrid(this);\r\n\r\n            if(this.sectionParams.girdSize  <= 0) {\r\n                    this.sectionParams.girdSize = 1\r\n            }\r\n            this.sectionParams.debugContent = [{\r\n                title: \"grid\", content: \"The number of cells in the x direction: \" + gridx + \"\\nThe number of cells in the y direction: \" + gridy,\r\n            }];\r\n            uiSetting.setScreenTransform(this.sectionParams.screenTransform);\r\n            //3DHouse.\r\n            if(this.sectionParams.showModel == 0){\r\n                this.ShowLayout();\r\n            }else if(this.sectionParams.showModel == 1){\r\n                this.ShowProjection();\r\n            }\r\n\r\n        },\r\n        setProjectionType(n){\r\n            this.sectionParams.nProjectionType = n;\r\n        },\r\n        setVRP(vrp0, vrp1, vrp2){\r\n            this.sectionParams.VRP[0] = vrp0;\r\n            this.sectionParams.VRP[1] = vrp1;\r\n            this.sectionParams.VRP[2] = vrp2;\r\n        },\r\n        setAngle( th,  ph,  dt){\r\n            this.sectionParams.Theta = th;\r\n            this.sectionParams.Phi = ph;\r\n            this.sectionParams.Delta = dt;\r\n        },\r\n        setPRP( prp0,  prp1,  prp2){\r\n            this.sectionParams.PRP[0] = prp0;\r\n            this.sectionParams.PRP[1] = prp1;\r\n            this.sectionParams.PRP[2] = prp2;\r\n        },\r\n        setCW( cw0,  cw1){\r\n            this.sectionParams.CW[0] = cw0;\r\n            this.sectionParams.CW[1] = cw1;\r\n        },\r\n\r\n        ShowLayout(){\r\n            let i, j;\r\n            //计算投影参考点的世界坐标\r\n            for (i = 0; i<2; i++)\r\n                for (j = 0; j<3; j++)\r\n                {\r\n                    this.sectionParams.lwcPRP[i][j] = this.sectionParams.VRP[j] + this.sectionParams.PRP[j];\r\n                    this.sectionParams.lwcPRP[i][j] = this.sectionParams.VRP[j] + this.sectionParams.PRP[j];\r\n                }\r\n            this.sectionParams.lwcPRP[1][1] = 0.0;\r\n\r\n            this.GenerateMatricTransform(this.sectionParams.VRP[0],this.sectionParams. VRP[1], this.sectionParams.VRP[2], this.sectionParams.Theta,this.sectionParams. Phi, this.sectionParams.Delta, this.sectionParams.MT);\r\n            //生成三维变换矩阵\r\n            this.Transform(this.sectionParams.lwcVRC, this.sectionParams.lvcVRC, 4, this.sectionParams.MT); //视图参考坐标系\r\n            this.Transform(this.sectionParams.lwcPRP, this.sectionParams.lvcPRP, 2, this.sectionParams.MT); //投影参考点\r\n                                            //////////////////////////////////////////////////////////////////////////////////\r\n                                            //投影变换\r\n            this.GenerateMatricProject(this.sectionParams.lPRP, this.sectionParams.MP, 0);//生成布局图所用的投影矩阵\r\n            this.Project(this.sectionParams.wcHouse, this.sectionParams.scHouse, 14, this.sectionParams.MP); //房屋\r\n            this.Project(this.sectionParams.lwcWC, this.sectionParams.lscWC, 4, this.sectionParams.MP); //世界坐标系\r\n            this.Project(this.sectionParams.lvcVRC, this.sectionParams.lscVRC, 4, this.sectionParams.MP); //视图参考坐标系\r\n            this.Project(this.sectionParams.lvcPRP, this.sectionParams.lscPRP, 2, this.sectionParams.MP); //投影参考点\r\n                                            //////////////////////////////////////////////////////////////////////////////////\r\n                                            //屏幕变换\r\n            this.ToScreen(this.sectionParams.scHouse, 14); //房屋\r\n            this.ToScreen(this.sectionParams.lscWC, 4); //世界坐标系\r\n            this.ToScreen(this.sectionParams.lscVRC, 4); //视图参考坐标系\r\n            this.ToScreen(this.sectionParams.lscPRP, 2); //投影参考点\r\n                                //////////////////////////////////////////////////////////////////////////////////\r\n                                //显示图形\r\n            this.DrawHouse();//画房屋\r\n                        //画世界坐标系\r\n            for (i = 0; i<3; i++)\r\n                uiSetting.drawLineInGrid(this,new Point(this.sectionParams.lscWC[3][0], this.sectionParams.lscWC[3][1]), new Point(this.sectionParams.lscWC[i][0], this.sectionParams.lscWC[i][1]),this.sectionParams.color);\r\n\r\n            for (i = 0; i<3; i++)\r\n                uiSetting.drawLineInGrid(this,new Point(this.sectionParams.lscVRC[i][0], this.sectionParams.lscVRC[i][1]), new Point(this.sectionParams.lscVRC[3][0], this.sectionParams.lscVRC[3][1]),this.sectionParams.color);\r\n\r\n            //画投影参考点\r\n            uiSetting.drawEllipseInGrid(this,this.sectionParams.lscPRP[0][0] - 3, this.sectionParams.lscPRP[0][1] - 3, 6, 6);\r\n            uiSetting.drawLineInGrid(this,new Point(this.sectionParams.lscPRP[0][0], this.sectionParams.lscPRP[0][1]), new Point(this.sectionParams.lscPRP[1][0], this.sectionParams.lscPRP[1][1]),this.sectionParams.color);\r\n        },// 显示布局图，供CLayoutView调用\r\n\r\n        \r\n        ShowProjection(){\r\n            //三维变换\r\n            this.GenerateMatricTransform(-this.sectionParams.VRP[0], -this.sectionParams.VRP[1], -this.sectionParams.VRP[2], -this.sectionParams.Theta, -this.sectionParams.Phi, -this.sectionParams.Delta, this.sectionParams.MT);\r\n            this.Transform(this.sectionParams.wcHouse, this.sectionParams.vcHouse, 14, this.sectionParams.MT);\r\n            //投影变换\r\n            this.GenerateMatricProject(this.sectionParams.PRP, this.sectionParams.MP, this.sectionParams.nProjectionType);\r\n            this.Project(this.sectionParams.vcHouse, this.sectionParams.scHouse, 14, this.sectionParams.MP);\r\n            //屏幕变换\r\n            this.ToScreen(this.sectionParams.scHouse, 14);\r\n            //显示图形\r\n            this.DrawHouse();\r\n        },// 显示投影图，供CProjectionView调用\r\n\r\n        Transform( MS,  MO,  nRow,  MT){\r\n            let i, j;\r\n            for (i = 0; i<nRow; i++)\r\n                for (j = 0; j<3; j++)\r\n                    MO[i][j] = MT[j][0] * MS[i][0] + MT[j][1] * MS[i][1] +MT[j][2] * MS[i][2] + MT[j][3] * 1.0;\r\n        },//三维变换\r\n\r\n        Project( MS,  MO,  nRow,  MP){\r\n            let i;\r\n            let xObs, yObs, zObs, wObs;\r\n            for (i = 0; i<nRow; i++)\r\n            {\r\n                xObs = MS[i][0] * MP[0][0] + MS[i][2] * MP[0][2];\r\n                yObs = MS[i][1] * MP[1][1] + MS[i][2] * MP[1][2];\r\n                zObs = 0.0;\r\n                wObs = MS[i][2] * MP[3][2] + 1.0;\r\n                MO[i][0] = (Math.floor)(xObs / wObs);\r\n                MO[i][1] = (Math.floor)(yObs / wObs);\r\n            }\r\n        },// 投影变换\r\n        \r\n        ToScreen( MS,  nRow){\r\n            let i;\r\n            for (i = 0; i<nRow; i++)\r\n                MS[i][1] = -MS[i][1];\r\n        },// 屏幕变换\r\n\r\n        MatricMultiply( M1,  M2,  M3){\r\n            for (let i = 0; i<4; i++)\r\n                for (let j = 0; j<4; j++)\r\n                    M3[i][j] = M1[i][0] * M2[0][j] + M1[i][1] * M2[1][j] + M1[i][2] * M2[2][j] + M1[i][3] * M2[3][j];\r\n        },// 矩阵乘法\r\n\r\n        GenerateMatricTransform( dx,  dy,  dz,\r\n            theta,  phi,  delta,  MT){\r\n            const PI = Math.PI;\r\n            //将角度转换成弧度\r\n            let _theta = theta*PI / 180;\r\n            let _phi = phi*PI / 180;\r\n            let _delta = delta*PI / 180;\r\n            let T = [], Rz = [], Ry = [], Rx = [], temp = [];\r\n            for(let t = 0; t < 4;t++){\r\n                T.push([]);Rz.push([]);Ry.push([]);Rx.push([]);temp.push([]);\r\n            }\r\n            //初始化矩阵\r\n            let i, j;\r\n            for (i = 0; i<4; i++)\r\n                for (j = 0; j<4; j++)\r\n                {\r\n                    T[i][j] = 0.0;\r\n                    Ry[i][j] = 0.0;\r\n                    Rx[i][j] = 0.0;\r\n                    Rz[i][j] = 0.0;\r\n                    temp[i][j] = 0.0;\r\n                    MT[i][j] = 0.0;\r\n                }\r\n            //平移变换\r\n            T[0][0] = 1.0;\r\n            T[0][3] = dx;\r\n            T[1][1] = 1.0;\r\n            T[1][3] = dy;\r\n            T[2][2] = 1.0;\r\n            T[2][3] = dz;\r\n            T[3][3] = 1.0;\r\n            //绕z轴旋转\r\n            Rz[0][0] = Math.cos(_theta);\r\n            Rz[0][1] = -Math.sin(_theta);\r\n            Rz[1][0] = Math.sin(_theta);\r\n            Rz[1][1] = Math.cos(_theta);\r\n            Rz[2][2] = 1.0;\r\n            Rz[3][3] = 1.0;\r\n            //绕y轴旋转\r\n            Ry[0][0] = Math.cos(_phi);\r\n            Ry[0][2] = Math.sin(_phi);\r\n            Ry[1][1] = 1.0;\r\n            Ry[2][0] = -Math.sin(_phi);\r\n            Ry[2][2] = Math.cos(_phi);\r\n            Ry[3][3] = 1.0;\r\n            //绕x轴旋转\r\n            Rx[0][0] = 1.0;\r\n            Rx[1][1] = Math.cos(_delta);\r\n            Rx[1][2] = -Math.sin(_delta);\r\n            Rx[2][1] = Math.sin(_delta);\r\n            Rx[2][2] = Math.cos(_delta);\r\n            Rx[3][3] = 1.0;\r\n            //生成三维变换矩阵\r\n            //MT = Rx * Ry * Rz * T\r\n            this.MatricMultiply(T, Rz, MT);\r\n            this.MatricMultiply(MT, Ry, temp);\r\n            this.MatricMultiply(temp, Rx, MT)\r\n        },// 构造三维变换矩阵\r\n\r\n        GenerateMatricProject( PRP,  MP,  nType){\r\n            //透视投影\r\n            if (nType == 0)\r\n            {\r\n                MP[0][0] = 1.0;\r\n                MP[0][1] = 0.0;\r\n                MP[0][2] = -PRP[0] / PRP[2];\r\n                MP[0][3] = 0.0;\r\n                MP[1][0] = 0.0;\r\n                MP[1][1] = 1.0;\r\n                MP[1][2] = -PRP[1] / PRP[2];\r\n                MP[1][3] = 0.0;\r\n                MP[2][0] = 0.0;\r\n                MP[2][1] = 0.0;\r\n                MP[2][2] = 0.0;\r\n                MP[2][3] = 0.0;\r\n                MP[3][0] = 0.0;\r\n                MP[3][1] = 0.0;\r\n                MP[3][2] = -1.0 / PRP[2];\r\n                MP[3][3] = 1.0;\r\n            }\r\n            //平行投影\r\n            else if (nType == 1)\r\n            {\r\n                MP[0][0] = 1.0;\r\n                MP[0][1] = 0.0;\r\n                MP[0][2] = -(PRP[0] - CW[0]) / PRP[2];\r\n                MP[0][3] = 0.0;\r\n                MP[1][0] = 0.0;\r\n                MP[1][1] = 1.0;\r\n                MP[1][2] = -(PRP[1] - CW[1]) / PRP[2];\r\n                MP[1][3] = 0.0;\r\n                MP[2][0] = 0.0;\r\n                MP[2][1] = 0.0;\r\n                MP[2][2] = 0.0;\r\n                MP[2][3] = 0.0;\r\n                MP[3][0] = 0.0;\r\n                MP[3][1] = 0.0;\r\n                MP[3][2] = 0.0;\r\n                MP[3][3] = 1.0;\r\n            }\r\n        },// 投影矩阵,\r\n\r\n        DrawHouse(){\r\n            let i;\r\n            //画左侧墙壁\r\n            for (i = 0; i<5; i++)\r\n                uiSetting.drawLineInGrid(this,new Point(this.sectionParams.scHouse[i][0], this.sectionParams.scHouse[i][1]),\r\n                 new Point(this.sectionParams.scHouse[(i + 1) % 5][0], this.sectionParams.scHouse[(i + 1) % 5][1]),this.sectionParams.color);\r\n            //画右侧墙壁\r\n            for (i = 7; i<11; i++)\r\n                uiSetting.drawLineInGrid(this,new Point(this.sectionParams.scHouse[i][0], this.sectionParams.scHouse[i][1]), new Point(this.sectionParams.scHouse[i + 1][0], this.sectionParams.scHouse[i + 1][1]));\r\n            uiSetting.drawLineInGrid(this,new Point(this.sectionParams.scHouse[i][0], \r\n                this.sectionParams.scHouse[i][1]), new Point(this.sectionParams.scHouse[7][0], this.sectionParams.scHouse[7][1]),this.sectionParams.color);\r\n            //画横梁\r\n            for (i = 0; i<6; i++)\r\n                uiSetting.drawLineInGrid(this,new Point(this.sectionParams.scHouse[i][0], this.sectionParams.scHouse[i][1]), new Point(this.sectionParams.scHouse[i + 7][0], this.sectionParams.scHouse[i + 7][1]));\r\n            //画门\r\n            uiSetting.drawLineInGrid(this,new Point(this.sectionParams.scHouse[5][0], this.sectionParams.scHouse[5][1]), new Point(this.sectionParams.scHouse[6][0], this.sectionParams.scHouse[6][1]));\r\n            uiSetting.drawLineInGrid(this,new Point(this.sectionParams.scHouse[12][0], this.sectionParams.scHouse[12][1]), new Point(this.sectionParams.scHouse[13][0], this.sectionParams.scHouse[13][1]));\r\n        },// 绘制房子\r\n        SetUI() {\r\n            this.$refs.page.SetUI();\r\n        },\r\n    }\r\n}\r\n\r\n</script>","import { render } from \"./index.vue?vue&type=template&id=6a4f0090&lang=html\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"F:\\\\Note-Haruluya\\\\Project\\\\Rock-sugar\\\\rock-sugar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_nano_cg_experiment_page","prop_des_data","$data","prop_ui_setter","$options","prop_section_params","ref","desData","category","name","buttonContent","title","content","data","canvas","ctx","sectionParams","nProjectionType","VRP","Theta","Phi","Delta","PRP","CW","wcHouse","vcHouse","scHouse","lPRP","lwcWC","lscWC","lwcVRC","lvcVRC","lscVRC","lwcPRP","lvcPRP","lscPRP","MT","MP","debugContent","girdSize","color","screenTransform","x","y","scale","showModel","computed","uiSetter","this","setter","type","id","value","min","max","callback","uiSetting","default","mounted","Init","SetUI","methods","$refs","page","getCanvas","getContext","setViewer","Render","i","j","t","push","nScale","gridx","parseInt","width","gridy","height","clearRect","ShowLayout","ShowProjection","setProjectionType","n","setVRP","vrp0","vrp1","vrp2","setAngle","th","ph","dt","setPRP","prp0","prp1","prp2","setCW","cw0","cw1","GenerateMatricTransform","Transform","GenerateMatricProject","Project","ToScreen","DrawHouse","Point","MS","MO","nRow","xObs","yObs","zObs","wObs","Math","floor","MatricMultiply","M1","M2","M3","dx","dy","dz","theta","phi","delta","PI","_theta","_phi","_delta","T","Rz","Ry","Rx","temp","cos","sin","nType","__exports__","render"],"sourceRoot":""}