{"version":3,"file":"js/919.7fdc6997.js","mappings":"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","sources":["webpack://rock-sugar/./src/pages/Webgl/WebglScene/Skybox/index.vue","webpack://rock-sugar/./src/pages/Webgl/WebglScene/Skybox/resource/obj-fragment-shader.js","webpack://rock-sugar/./src/pages/Webgl/WebglScene/Skybox/resource/obj-vertex-shader.js","webpack://rock-sugar/./src/pages/Webgl/WebglScene/Skybox/resource/skybox-fragment-shader.js","webpack://rock-sugar/./src/pages/Webgl/WebglScene/Skybox/resource/skybox-vertex-shader.js","webpack://rock-sugar/./src/pages/Webgl/WebglScene/Skybox/resource/data.js","webpack://rock-sugar/./src/pages/Webgl/WebglScene/Skybox/index.vue?7f19"],"sourcesContent":["<template lang=\"html\">\r\n    <nano_webgl_scene_panel\r\n        :prop_des_data=\"desData\"\r\n        :prop_ui_setter=\"uiSetter\"\r\n        :prop_section_params=\"sectionParams\"\r\n        ref=\"page\"\r\n        @Init=\"Init\"\r\n        @Render=\"Render\"\r\n        @prop_ui_setter=\"uiSetter\"\r\n    />\r\n</template>\r\n<script>\r\nimport objFragmentShader from './resource/obj-fragment-shader.js'\r\nimport objVertexShader from './resource/obj-vertex-shader.js'\r\nimport skyboxFragmentShader from './resource/skybox-fragment-shader.js'\r\nimport skyboxVertexShader from './resource/skybox-vertex-shader.js'\r\nimport left from './images/left.jpg'\r\nimport down from './images/down.jpg'\r\nimport front from './images/front.jpg'\r\nimport right from './images/right.jpg'\r\nimport up from './images/up.jpg'\r\nimport back from './images/back.jpg'\r\n\r\n\r\nimport data from './resource/data.js'\r\n\r\n\r\nconst desData = {\r\n    category:\"Webgl\",\r\n    name:\"Skybox\",\r\n    buttonContent:\"查看源码\",\r\n    title:\"天空盒\",\r\n    content:\"From the rendering world, you can never see the truth outside the sky box.\"\r\n}\r\n\r\nconst objPositions = data.obj.position\r\nconst objNormals = data.obj.normal\r\nconst skyboxPosition = data.skybox.position\r\nexport default {\r\n    name:'SpotLight',\r\n    data() {\r\n        return {\r\n            gl: null,\r\n            desData,\r\n            perspective:{\r\n                aspect:0,\r\n                fieldOfViewRadians: HNWUEngine.degToRad(60),\r\n                zNear: 1,\r\n                zFar: 2000,\r\n            },\r\n            transform:{\r\n                translation:[0, 0, -0],\r\n                rotation:[HNWUEngine.degToRad(0), HNWUEngine.degToRad(0), HNWUEngine.degToRad(0)],\r\n                scale:[1,1,1]\r\n            },\r\n            camera:{\r\n                target:[0, 0, 0],\r\n                position:[0, 0, 2],\r\n                up:[0,1,0]\r\n            },\r\n            sectionParams:{\r\n                texture:null,\r\n            },\r\n            page:null,\r\n            uiSetter:[],\r\n        }\r\n    },\r\n    methods: {\r\n        Init(){\r\n            this.page = this.$refs.page;\r\n            this.gl = this.page.getGL();\r\n            const gl = this.gl;\r\n            \r\n            //create programs.\r\n            this.page.addProgram(\"obj\",objVertexShader,objFragmentShader);\r\n            this.page.addProgram(\"skybox\",skyboxVertexShader,skyboxFragmentShader);\r\n\r\n\r\n            //create components.\r\n            this.page.addComponent(\"obj\",\"obj\");\r\n            this.page.addComponent(\"skybox\",\"skybox\");\r\n            \r\n\r\n            //set aspect.\r\n            this.perspective.aspect = this.gl.canvas.clientWidth / this.gl.canvas.clientHeight;\r\n\r\n            //set tranform for 3dviewer.\r\n            this.$refs.page.set3DViewer(this.perspective,this.camera,this.transform);\r\n\r\n            //Get bufferinfo and setters.\r\n            this.page.addBuffer(\"position\",{numComponents:3,data:objPositions},\"obj\");\r\n            this.page.addBuffer(\"normal\",{numComponents:3,data:objNormals},\"obj\");\r\n            this.page.addBuffer(\"position\",{numComponents:2,data:skyboxPosition},\"skybox\");\r\n\r\n            this.sectionParams.texture = gl.createTexture();\r\n            gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.sectionParams.texture);\r\n            \r\n            this.faceInfos(gl).forEach((faceInfo) => {\r\n                const {target, url} = faceInfo;\r\n\r\n                // Upload the canvas to the cubemap face.\r\n                const level = 0;\r\n                const internalFormat = gl.RGBA;\r\n                const width = 512;\r\n                const height = 512;\r\n                const format = gl.RGBA;\r\n                const type = gl.UNSIGNED_BYTE;\r\n\r\n                // setup each face so it's immediately renderable\r\n                gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\r\n\r\n                // Asynchronously load an image\r\n                const image = new Image();\r\n                image.src = url;\r\n                image.addEventListener('load', ()=>{\r\n                    // Now that the image has loaded make copy it to the texture.\r\n                    gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.sectionParams.texture);\r\n                    gl.texImage2D(target, level, internalFormat, format, type, image);\r\n                    gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n                    // this.page.Render();\r\n                });\r\n            });\r\n\r\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\r\n            gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n\r\n        },\r\n        Render(){\r\n            const gl = this.gl;\r\n            // matrix.\r\n            let cameraMatrix = HNWUEngine.lookAt(this.camera.position, this.camera.target, this.camera.up);\r\n            let viewMatrix = HNWUEngine.inverse(cameraMatrix);\r\n            let projectionMatrix = HNWUEngine.perspective(\r\n                this.perspective.fieldOfViewRadians, \r\n                this.perspective.aspect, \r\n                this.perspective.zNear, \r\n                this.perspective.zFar\r\n                );\r\n            let worldMatrix = HNWUEngine.getTransformMatrix(\r\n                HNWUEngine.xRotation(0),\r\n                this.transform\r\n            )\r\n            //skybox matrix.\r\n            var viewDirectionMatrix = HNWUEngine.copy(viewMatrix);\r\n            viewDirectionMatrix[12] = 0;\r\n            viewDirectionMatrix[13] = 0;\r\n            viewDirectionMatrix[14] = 0;\r\n            var viewDirectionProjectionMatrix = HNWUEngine.multiply3d(\r\n                projectionMatrix, viewDirectionMatrix);\r\n            var viewDirectionProjectionInverseMatrix =\r\n                HNWUEngine.inverse(viewDirectionProjectionMatrix);\r\n\r\n            //set uniform.\r\n            this.page.addUniform(\"u_projection\",projectionMatrix,\"obj\");\r\n            this.page.addUniform(\"u_view\",viewMatrix,\"obj\");\r\n            this.page.addUniform(\"u_world\",worldMatrix,\"obj\");\r\n            this.page.addUniform(\"u_worldCameraPosition\",this.camera.position,\"obj\");\r\n            this.page.addUniform(\"u_viewDirectionProjectionInverse\",viewDirectionProjectionInverseMatrix,\"skybox\")\r\n            this.page.addUniform(\"u_texture\",this.sectionParams.texture,\"obj\");\r\n            this.page.addUniform(\"u_texture\",this.sectionParams.texture,\"skybox\");\r\n            this.page.useProgram(this.page.getComponent(\"obj\").program)\r\n            gl.enable(gl.CULL_FACE);\r\n            gl.enable(gl.DEPTH_TEST);\r\n            gl.depthFunc(gl.LESS);  // use the default depth test\r\n            this.page.setSetters(\"obj\");\r\n            this.page.drawComponent(\"obj\")\r\n\r\n\r\n            this.page.useProgram(this.page.getComponent(\"skybox\").program);\r\n            gl.enable(gl.CULL_FACE);\r\n            gl.enable(gl.DEPTH_TEST);\r\n            gl.depthFunc(gl.LEQUAL);\r\n            this.page.setSetters(\"skybox\");\r\n            this.page.drawComponent(\"skybox\")\r\n\r\n        },\r\n        faceInfos(gl){\r\n            return[\r\n                {\r\n                    target: gl.TEXTURE_CUBE_MAP_POSITIVE_X,\r\n                    url: right,\r\n                },\r\n                {\r\n                    target: gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\r\n                    url: left,\r\n                },\r\n                {\r\n                    target: gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\r\n                    url: down,\r\n                },\r\n                {\r\n                    target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\r\n                    url: up,\r\n                },\r\n                {\r\n                    target: gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\r\n                    url: back,\r\n                },\r\n                {\r\n                    target: gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\r\n                    url: front,\r\n                },\r\n            ]\r\n        }\r\n\r\n    },\r\n    mounted() {\r\n\r\n    },\r\n}\r\n</script>","export default\r\n`\r\nprecision highp float;\r\n\r\n// Passed in from the vertex shader.\r\nvarying vec3 v_worldPosition;\r\nvarying vec3 v_worldNormal;\r\n\r\n// The texture.\r\nuniform samplerCube u_texture;\r\n\r\n// The position of the camera\r\nuniform vec3 u_worldCameraPosition;\r\n\r\nvoid main() {\r\n  vec3 worldNormal = normalize(v_worldNormal);\r\n  vec3 eyeToSurfaceDir = normalize(v_worldPosition - u_worldCameraPosition);\r\n  vec3 direction = reflect(eyeToSurfaceDir,worldNormal);\r\n\r\n  gl_FragColor = textureCube(u_texture, direction);\r\n}\r\n\r\n`\r\n\r\n","export default\r\n`\r\nattribute vec4 a_position;\r\nattribute vec3 a_normal;\r\n\r\nuniform mat4 u_projection;\r\nuniform mat4 u_view;\r\nuniform mat4 u_world;\r\n\r\nvarying vec3 v_worldPosition;\r\nvarying vec3 v_worldNormal;\r\n\r\nvoid main() {\r\n  // Multiply the position by the matrix.\r\n  gl_Position = u_projection * u_view * u_world * a_position;\r\n\r\n  // send the view position to the fragment shader\r\n  v_worldPosition = (u_world * a_position).xyz;\r\n\r\n  // orient the normals and pass to the fragment shader\r\n  v_worldNormal = mat3(u_world) * a_normal;\r\n}\r\n\r\n`\r\n\r\n","export default\r\n`\r\nprecision mediump float;\r\n\r\nuniform samplerCube u_skybox;\r\nuniform mat4 u_viewDirectionProjectionInverse;\r\n\r\nvarying vec4 v_position;\r\nvoid main() {\r\n  vec4 t = u_viewDirectionProjectionInverse * v_position;\r\n  gl_FragColor = textureCube(u_skybox, normalize(t.xyz / t.w));\r\n}\r\n\r\n`","export default\r\n`\r\nattribute vec4 a_position;\r\nvarying vec4 v_position;\r\nvoid main() {\r\n  v_position = a_position;\r\n  gl_Position = vec4(a_position.xy, 1, 1);\r\n}\r\n`","export default\r\n{\r\n    obj:{\r\n        position: new Float32Array(\r\n            [\r\n            -0.5, -0.5,  -0.5,\r\n            -0.5,  0.5,  -0.5,\r\n             0.5, -0.5,  -0.5,\r\n            -0.5,  0.5,  -0.5,\r\n             0.5,  0.5,  -0.5,\r\n             0.5, -0.5,  -0.5,\r\n        \r\n            -0.5, -0.5,   0.5,\r\n             0.5, -0.5,   0.5,\r\n            -0.5,  0.5,   0.5,\r\n            -0.5,  0.5,   0.5,\r\n             0.5, -0.5,   0.5,\r\n             0.5,  0.5,   0.5,\r\n        \r\n            -0.5,   0.5, -0.5,\r\n            -0.5,   0.5,  0.5,\r\n             0.5,   0.5, -0.5,\r\n            -0.5,   0.5,  0.5,\r\n             0.5,   0.5,  0.5,\r\n             0.5,   0.5, -0.5,\r\n        \r\n            -0.5,  -0.5, -0.5,\r\n             0.5,  -0.5, -0.5,\r\n            -0.5,  -0.5,  0.5,\r\n            -0.5,  -0.5,  0.5,\r\n             0.5,  -0.5, -0.5,\r\n             0.5,  -0.5,  0.5,\r\n        \r\n            -0.5,  -0.5, -0.5,\r\n            -0.5,  -0.5,  0.5,\r\n            -0.5,   0.5, -0.5,\r\n            -0.5,  -0.5,  0.5,\r\n            -0.5,   0.5,  0.5,\r\n            -0.5,   0.5, -0.5,\r\n        \r\n             0.5,  -0.5, -0.5,\r\n             0.5,   0.5, -0.5,\r\n             0.5,  -0.5,  0.5,\r\n             0.5,  -0.5,  0.5,\r\n             0.5,   0.5, -0.5,\r\n             0.5,   0.5,  0.5,\r\n        \r\n        ]),\r\n    \r\n        normal: new Float32Array(\r\n            [\r\n               0, 0, -1,\r\n               0, 0, -1,\r\n               0, 0, -1,\r\n               0, 0, -1,\r\n               0, 0, -1,\r\n               0, 0, -1,\r\n        \r\n               0, 0, 1,\r\n               0, 0, 1,\r\n               0, 0, 1,\r\n               0, 0, 1,\r\n               0, 0, 1,\r\n               0, 0, 1,\r\n        \r\n               0, 1, 0,\r\n               0, 1, 0,\r\n               0, 1, 0,\r\n               0, 1, 0,\r\n               0, 1, 0,\r\n               0, 1, 0,\r\n        \r\n               0, -1, 0,\r\n               0, -1, 0,\r\n               0, -1, 0,\r\n               0, -1, 0,\r\n               0, -1, 0,\r\n               0, -1, 0,\r\n        \r\n              -1, 0, 0,\r\n              -1, 0, 0,\r\n              -1, 0, 0,\r\n              -1, 0, 0,\r\n              -1, 0, 0,\r\n              -1, 0, 0,\r\n        \r\n               1, 0, 0,\r\n               1, 0, 0,\r\n               1, 0, 0,\r\n               1, 0, 0,\r\n               1, 0, 0,\r\n               1, 0, 0,\r\n        ])\r\n    },\r\n    skybox:{\r\n        position:new Float32Array(\r\n            [\r\n              -1, -1,\r\n               1, -1,\r\n              -1,  1,\r\n              -1,  1,\r\n               1, -1,\r\n               1,  1,\r\n            ])\r\n    }\r\n    \r\n}","import { render } from \"./index.vue?vue&type=template&id=17c961b3&lang=html\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"F:\\\\Note-Haruluya\\\\Project\\\\Rock-sugar\\\\rock-sugar\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createBlock","_component_nano_webgl_scene_panel","prop_des_data","$data","prop_ui_setter","prop_section_params","ref","onInit","$options","onRender","onProp_ui_setter","obj","position","Float32Array","normal","skybox","desData","category","name","buttonContent","title","content","objPositions","data","objNormals","skyboxPosition","gl","perspective","aspect","fieldOfViewRadians","HNWUEngine","degToRad","zNear","zFar","transform","translation","rotation","scale","camera","target","up","sectionParams","texture","page","uiSetter","methods","Init","this","$refs","getGL","addProgram","objVertexShader","objFragmentShader","skyboxVertexShader","skyboxFragmentShader","addComponent","canvas","clientWidth","clientHeight","set3DViewer","addBuffer","numComponents","createTexture","bindTexture","TEXTURE_CUBE_MAP","faceInfos","forEach","faceInfo","url","level","internalFormat","RGBA","width","height","format","type","UNSIGNED_BYTE","texImage2D","image","Image","src","addEventListener","generateMipmap","texParameteri","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","Render","cameraMatrix","lookAt","viewMatrix","inverse","projectionMatrix","worldMatrix","getTransformMatrix","xRotation","viewDirectionMatrix","copy","viewDirectionProjectionMatrix","multiply3d","viewDirectionProjectionInverseMatrix","addUniform","useProgram","getComponent","program","enable","CULL_FACE","DEPTH_TEST","depthFunc","LESS","setSetters","drawComponent","LEQUAL","TEXTURE_CUBE_MAP_POSITIVE_X","right","TEXTURE_CUBE_MAP_NEGATIVE_X","left","TEXTURE_CUBE_MAP_POSITIVE_Y","down","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","back","TEXTURE_CUBE_MAP_NEGATIVE_Z","front","mounted","__exports__","render"],"sourceRoot":""}